.TH AMAKELOCAL 1 "$Date$"
.SH NAME
amakelocal \- construct antelopemake.local for local site conditions
.SH SYNOPSIS
.nf
amakelocal [-v] [-i] [-p pfname] 
.fi
.SH DESCRIPTION
Antelope has a self-contained compile mechanism and structure with rules codified in a standardized 
file $(ANTELOPEMAKE), as documented in antelopemakefile(5). In general, contributed code is written 
to stay within this self-contained framework as much as possible. At times, however, it is necessary to 
write contributed-code utilities that depend not only on the elements contained in or implied by 
the standard Antelope framework, but also on elements available externally and installed by the 
administrators of a given host system. 

The amakelocal utility creates an $(ANTELOPEMAKE).local file (see antelopemakelocal(5))
appropriate to the system-administration conditions for the local system, tailored to support 
the compilation of contributed-code modules that depend not only on Antelope but also on external 
packages. Specifically, this program adjusts for the parochial locations of software packages and 
libraries external to Antelope but on which Antelope contributed-code programs depend. More 
specifically, amakelocal allows a parameter file to handle, in a standardized way, the configuration 
of Makefile macros which may vary across different machines and different operating systems. 

This program is designed to be part of an automated compile process. Though it can be run by hand, 
this is not the design intent. 
.SH OPTIONS
.IP -v 
verbose
.IP "-p pfname"
Specify an alternate parameter file. If this option is used, amakelocal does not default to using 
the amakelocal_proto.pf file in the absence of the specified file. 
.IP -i 
Install mode. The default behavior of amakelocal is to create an antelopemake.local file in the 
local directory, for installation by a surrounding make hierarchy. If the -i option is invoked, 
amakelocal will install the created file in $ANTELOPE/include and remove the copy from the local 
directory, allowing the amakelocal command to be run by hand from anywhere after updating the driver 
parameter file. 
.SH FILES
.SH ENVIRONMENT
.SH PARAMETER FILE
The amakelocal.pf parameter file contains specifications for macros that will be custom-configured 
for the machine on which compilation is taking place. If this parameter-file is present, these contents
are used. If amakelocal.pf is not present, \fBamakelocal\fP defaults to the supplied 
\fIamakelocal_proto.pf\fP parameter file. If an element is not present, or if the entry for 
the current operating system is not specified or is empty, the corresponding macro is omitted from 
the output file. 
.nf

output_file antelopemake.local

elements &Arr{
	XMOTIFLIB &Arr{
		Darwin 	-L/sw/lib
		Solaris -L/usr/openwin/lib
		Linux 	-L/usr/X11R6/lib
	}
	XMOTIFINCLUDE &Arr{
		Darwin 	-I/sw/include
		Solaris -I/usr/openwin/include
		Linux 	-I/usr/X11R6/include
	}
}
.fi
.SH EXAMPLE
.in 2c
.ft CW
.nf
% amakelocal -iv
amakelocal: Couldn't find 'amakelocal.pf'; Using parameter-file 'amakelocal_proto.pf'
amakelocal: Generated 'antelopemake.local' from parameter-file 'amakelocal_proto'
amakelocal: Installing 'antelopemake.local' in /opt/antelope/4.10/include
%
.fi
.ft R
.in
.SH RETURN VALUES
.SH LIBRARY
.SH ATTRIBUTES
.SH DIAGNOSTICS
.SH "SEE ALSO"
.nf
antelopemake(5), antelopemakelocal(5), localmake(1)
.fi
.SH "BUGS AND CAVEATS"
This is a development prototype. 

Do not modify the parameter-file amakelocal_proto.pf unless you are a developer extending the capabilities
and external linkages of the Antelope contributed-code source-tree itself. If you just want to use 
the configuration mechanism for your local site, copy amakelocal_proto.pf to amakelocal.pf (putting the 
latter somewhere on your parameter-file path), and edit the latter appropriately. 

It would be nice for amakelocal or some other program to have a GUI editing mode to modify the 
amakelocal.pf file. 
.SH AUTHOR
Kent Lindquist
Lindquist Consulting, Inc.
.\" $Id$
