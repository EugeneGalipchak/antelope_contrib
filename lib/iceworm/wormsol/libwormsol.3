.TH LIBWORMSOL 3 "$Date$"
.SH NAME
libwormsol \- Shared library versions of Earthworm Solaris-dependent functions
.SH SYNOPSIS
.nf
Time_ew	adjustTimeoutLength ( int timeout_msec );

char    *asctime_ew ( const struct tm *tm, char *buf, int buflen );

int     chdir_ew ( char *path );

void    CloseMutex ( void );

void    CloseSpecificMutex ( mutex_t* mp );

int     copyfile ( 
		char *fname, char *tname, char *host, char *dir,
		char *userid, char *passwd, char *errtxt );

int     CreateDir ( char *dirname );

void    CreateMutex_ew ( void );

void    CreateSemaphore_ew ( void );

void    CreateSpecificMutex ( mutex_t* mp );

char    *ctime_ew ( const time_t *epochsec, char *buf, int buflen );

char    *datestr23 ( double t, char *pbuf, int len );

char    *datestr23_local ( double t, char *pbuf, int len );

void    DestroySemaphore ( void );

void    ErrExit ( int returnCode );

int     error_routine ( char *error_string );

int     GetDiskAvail ( unsigned *DiskAvail );

int     GetFileName ( char fname[] );

int     getsysname_ew ( char *sysname, int length );

Time_ew GetTime_ew ( void );

struct tm *gmtime_ew ( const time_t *epochsec, struct tm *res );

double 	hrtime_ew ( double *tnow );

int     init_wait_timer ( timer_t *timerHandle, DWORD *errorCode );

int     KillSelfThread ( void );

int     KillThread ( unsigned int tid );

struct tm *localtime_ew ( const time_t *epochsec, struct tm *res );

void    pipe_close ( void );

int     pipe_get ( char *msg, int maxlen, int *type );

int     pipe_init ( char *nextproc, unsigned long pipesize );

int     pipe_put ( char *msg, int msgtype );

void    PostSemaphore ( void );

int     RecursiveCreateDir ( char *dirname );

void    ReleaseMutex_ew ( void );

void    ReleaseSpecificMutex ( mutex_t* mp );

int     rename_ew ( char *path1, char *path2 );

void    RequestMutex ( void );

void    RequestSpecificMutex ( mutex_t* mp );

int     sendall ( int socket, const char *msg, long msgLen, int flags );

int     SendMail ( 
		char person[][60], int nmail, char *mailProg, 
		char *subject, char *msg, char *msgPrefix, 
		char *msgSuffix, char *mailServer );

int     SendPage ( char *buff );

void    SignalHandle ( int sig );

void    sleep_ew ( unsigned alarmtime );

void    SocketClose ( int soko );

int     socketGetError_ew ( void );

void    SocketPerror ( char *note );

void    socketSetError_ew ( int error );

void    SocketSysInit ( void );

int     StartThread ( 
		void *fun(void *), unsigned stack_size, 
		unsigned *thread_id );

int     StartThreadWithArg ( 
		void *fun(void *), void* arg, unsigned stack_size, 
		unsigned *thread_id );

int     start_wait_timer ( 
		timer_t timerHandle, LONG lPeriod, DWORD *errorCode );

time_t 	timegm_ew ( struct tm *stm );

void    TimeOutHandler ( int dummy );

void    tport_attach ( SHM_INFO *region, long memkey );

void    tport_blocksigs ( void );

void    tport_buferror ( short ierr, char *note );

int     tport_buffer ( 
		SHM_INFO *region1, SHM_INFO *region2, 
		MSG_LOGO *getlogo, short nget, unsigned maxMsgSize,
		unsigned char module, unsigned char instid );

void    *tport_bufthr ( void *dummy );

int     tport_copyfrom ( 
		SHM_INFO *region, MSG_LOGO *getlogo, short nget, 
		MSG_LOGO *logo, long *length, char *msg, 
		long maxsize, unsigned char *seq );

int     tport_copyto ( 	
		SHM_INFO *region, MSG_LOGO *putlogo, long length,
		char *msg, unsigned char seq );

void    tport_create ( SHM_INFO *region, long nbytes, long memkey );

void    tport_destroy ( SHM_INFO *region );

void    tport_detach ( SHM_INFO *region );

int     tport_getflag ( SHM_INFO *region );

int     tport_getmsg ( 
		SHM_INFO *region, MSG_LOGO *getlogo, short nget,
		MSG_LOGO *logo, long *length, char *msg, long maxsize );

void    tport_putflag ( SHM_INFO *region, int flag );

int     tport_putmsg ( 
		SHM_INFO *region, MSG_LOGO *putlogo, 
		long length, char *msg );

void    tport_releasesigs ( void );

void    tport_syserr ( char *msg, long key );

void    WaitSemPost ( void );

void    WaitThread ( unsigned *thread_id );

int     wait_timer ( timer_t timerHandle, DWORD *errorCode );

.fi
.SH DESCRIPTION
These routines are part of the USGS Earthworm package, version 6.2, 
available through http://www.cr.usgs.gov/. They have been converted
to shared-object libraries. For full documentation of these routines 
see the USGS web pages at http://gldbrick.cr.usgs.gov/ew-doc/.
.SH OPTIONS
.SH FILES
.SH ENVIRONMENT
.SH PARAMETER FILE
.SH EXAMPLE
.ft CW
.in 2c
.nf
.fi
.in
.ft R
.SH RETURN VALUES
.SH LIBRARY
.SH ATTRIBUTES
MT-Safe ?
.SH DIAGNOSTICS
.SH "SEE ALSO"
.nf
libwormutil(3), libwormds(3), http://gldbrick.cr.usgs.gov/ew-doc/
.fi
.SH "BUGS AND CAVEATS"
.SH AUTHOR
.nf
Various, part of the Earthworm project of the U.S. Geological Survey. 
Converted to Shared-object libraries by Kent Lindquist as part of the 
Iceworm project.
.fi
.\" $Id$
