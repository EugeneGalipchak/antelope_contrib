.TH DBPROJECT_COVARIABCE 1 "$Date$"
.SH NAME
dbproject_covariance\- compute confidence-ellipse from covariance matrix
.SH SYNOPSIS
.nf
dbproject_covariance \[-v\] \[-c conf\] dbname
.fi
.SH DESCRIPTION
dbproject_covariance reads the covariance matrix out of the origerr 
table of a CSS3.0 or related database. A confidence ellipse is then 
calculated (smajax, sminax, and strike, as well as sdepth and stime)
based on a Chi-squared model and the specified confidence level. If 
no confidence level is specified, dbproject_covariance uses 0.683, 
i.e. 1 sigma. If any of smajax, sminax, strike, sdepth, and stime are 
non-null, the origerr row is skipped. If any of the covariance-matrix
elements are null, the origerr row is skipped. dbproject_covariance 
also uses ndef and dtype out of the origin table to determine the number 
of degrees of freedom of the solution.

When the projected confidence region has been computed, the origerr 
table is updated with the new smajax, sminax, sdepth, stime, strike, and 
conf values. 

The chi-squared values must be contained in the parameter file chi2.pf, 
as demonstrated below. One way to generate this table is with the 
matlab function provided, make_chi2table.m. 
.SH OPTIONS
.IP "-c \fIconf\fR"
Confidence level, from 0 to 1

.IP "-v"
Verbose
.SH FILES
.SH ENVIRONMENT
.SH PARAMETER FILE
dbproject_covariance looks for chi2.pf, which contains its lookup tables of 
chi-squared values. 
.nf

nordic% cat chi2.pf
chi2	&Tbl{
    &Arr{
        conf	0.683
        values	&Tbl{
            1.00128
            2.29771
            3.52916
            4.72226
             5.8907
            7.04179
            8.17988
            9.30779
            10.4275
            11.5403
        }
    }
    &Arr{
        conf	0.9
        values	&Tbl{
            2.70554
            4.60517
            6.25139
            7.77944
            9.23636
            10.6446
             12.017
            13.3616
            14.6837
            15.9872
        }
    }
    &Arr{
        conf	0.95
        values	&Tbl{
            3.84146
            5.99146
            7.81473
            9.48773
            11.0705
            12.5916
            14.0671
            15.5073
             16.919
             18.307
        }
    }
}
nordic% 
.fi
.SH EXAMPLE
.ft CW
.RS .2i
.nf
nordic% dbproject_covariance -v testdb
orid 1  ndef 41 dtype f conf 0.683      chi2 40.54
        smajax  0.95 sminax  0.55       strike 149.5
        sdepth  3.61    stime  0.30
orid 2  ndef 56 dtype f conf 0.683      chi2 56.31
        smajax  3.53 sminax  2.24       strike  18.9
        sdepth  6.30    stime  0.53
orid 3  ndef 21 dtype f conf 0.683      chi2 19.20
        smajax  9.10 sminax  4.01       strike 114.0
        sdepth  9.38    stime  0.93
orid 4  ndef 60 dtype f conf 0.683      chi2 60.49
        smajax  0.64 sminax  0.58       strike  98.6
        sdepth  5.33    stime  0.33
orid 5  ndef 41 dtype f conf 0.683      chi2 40.54
        smajax  1.59 sminax  0.60       strike 121.6
        sdepth  2.87    stime  0.20
nordic%
.fi
.RE
.ft R
.SH RETURN VALUES
.SH LIBRARY

A matlab file which allows easy construction of the chi2 parameter 
file is included here. This presumes the Antelope Toolbox 
for Matlab is installed. The Matlab stats toolbox may also be 
necessary.

.nf
%MAKE_CHI2TABLE
%
%	make_chi2table
%	Matlab M-file to generate a table of chi-squared values 
%	for a given confidence level, specified between 0 and 1 
%	as the CONF argument. The MAX_DOF freedom specifies the 
%	largest number of degrees of freedom to put in the table.
%	The table always starts at 1 degree of freedom. FILENAME
%	is the name of an Antelope parameter file into which 
%	the results will be written, usually 'chi2.pf'. CONF 
%	may be specified as a vector of multiple values, in which 
%	case tables are calculated for all specified values.

function make_chi2table( conf, max_dof, filename )

if nargin ~= 3, error('Usage: make_chi2table( conf, max_dof, filename )'); end

mypf=dbpf;

chi2 = cell( length(conf), 1 );

for i=1:length(conf),
   chi2{i}.conf = conf(i);
   chi2{i}.values=cellstr(num2str(chi2inv(conf(i),[1:max_dof])'));
end

pfput( mypf,'chi2',chi2 )
pfwrite( mypf, filename )
clear( mypf );

return
.fi
.SH DIAGNOSTICS
.nf
Couldn't find conf 0.98 in chi2.pf

Exceeded max degrees of freedom in chi2.pf conf %f table (need 247, have 200)

.fi
.SH "SEE ALSO"
.nf
dbgenloc(1)
.fi
.SH "BUGS AND CAVEATS"
The number of degrees of freedom is based on ndef and dtype. If array 
data are included (azimuth and slowness information in addition to 
arrival-time), there are more than one degree of freedom added per incoming 
phase, so using the number of defining phases is not exact. To 
do this properly, the timedef, azdef, and slodef fields would have to be 
examined in the assoc table. This has not been done in the current program.

There is another way to calculate the confidence level, namely with 
an F-distribution statistical model rather than the chi-squared. In 
principle this would be possible however it would probably require 
a recomputation of residuals from the assoc table. 

.SH AUTHOR
Kent Lindquist
.\" $Id$
