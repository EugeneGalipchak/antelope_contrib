.\" %W% %G%
.TH RELOCATE 1 "%G%"
.SH NAME
relocate - locates all events in a css3.0 database with genloc
.SH SYNOPSIS
.nf
relocate dbin dbout [-pf pffile -useold -sift expression]
.fi
.SH DESCRIPTION
\fIrelocate\fR is a datascope db interface program to a css3.0 database designed for relocating
a complete catalog of events using the genloc package of location routines.   The program
will attempt to join all of the following css3.0 tables: \fBarrival, assoc, event, origin, origerr,
site\fR.  The program will exit immediately if these tables cannot be joined.  Note an example
this if if any of the tables are empty.  
.LP
ARGUMENTS.  
\fIdbin\fR is the input css3.0 database with the required tables noted above. \fIdbout\fR is an
output database.   It should probably normally be empty when the program is started.  When
the program completes the following tables should be found in the output database: assoc,
event, origin, and origerr.  The ones written to the output dbt are updated for this location
run.  Note that a number of static fields in these tables (e.g. comments and phase definitions) 
are copied from the input db to the output with no change.
.LP
\fIpffile\fR is the parameter file used as control input for the genloc routines.  This routine
uses only the standard parameters described in genloc_intro(3).  Note also the file searching
features of parameter files described in pf(3).
.LP
The \fI-useold\fR flag controls a special property useful in relocation.  When this flag appears
on the input line initial locations from the original database are always used as input. 
Otherwise the method specified in the parameter file will be used on all data.
.LP
The \fI-sift\fR flag compiles the associated expression and uses it to subset the database.   For
instance, it is is commonly useful to use an expression like the following:
.nf

          distance(site.lat, site.lon, origin.lat, origin.lon)<5.0

.fi
to remove teleseismic associations from a local network catalog.  
.SH DIAGNOSTICS
All the routines here use the error logging routines developed by Dan Quinlan (elog_notify,
complain, register_error, etc.).  Many possible diagnostics can be found in this log that
theoretically will help identify the problem.  Most errors will only generate a one or more
diagnostics being written to the error log.  The program should die only if memory allocs fail
or you hit a programming bug.  
.SH "SEE ALSO"
.nf
orbgenloc(1), sgnloc(1), dbloc2(1), genloc_intro(3), genloc(3), ggnloc(3), pfread(3), elog(3)
.fi
.SH "BUGS AND CAVEATS"
This program should probably handle events from teleseismic associations more cleanly by
keying off particular fields in the database that are commonly used to indicate this. I felt,
however, that this was hardwiring too many specific feature in a code intended to be
relatively general.  This can be done by later merging the complementary data with a perl or
tcl script procedure.
.SH AUTHOR
Gary L. Pavlis
