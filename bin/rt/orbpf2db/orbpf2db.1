.TH ORBPF2DB 1 "$Date$"
.SH NAME
orbpf2db \- generic transfer of parameter-files to database
.SH SYNOPSIS
.nf
orbpf2db [-p pffile] [-s statefile] [-m match] [-f from] [-w mode] orb database
.fi
.SH DESCRIPTION
orbpf2db is a generic utility to map parameter-files on an orb into a
database of an arbitrary schema. The program presumes some stability
in the format of a given type of parameter file. The database should be in the 
correct schema for the parameter-files chosen with the 'match' option. 
The translation from parameter-file keys to database fields is specified in the 
parameter file for the orbpf2db program (this parameter file is called orbpf2db.pf
by default). See below for an example.

The parameter file consists of a translation array called "translations". Each 
key in this array is a match expression for the orb source-names of the input 
packets. For a given incoming packet, the first entry matching the srcname of the packet 
is used.  The values of this array specify translation instructions via nested 
arrays. In the outermost layer is an array with a 'schema' entry giving the target
database schema, and a 'tables' entry giving the database tables to create. Each 
entry of the 'tables' array has a key for the database table name, with a value 
giving an array of translations. These translations are again key-value pairs: the key 
is the name of a database field in the given table; the value is an expression to 
give to the pfget(3) routine for the unstuffed parameter-file orb packet. Several 
special values are allowed for these key-value pairs. If a value expression is 
preceded by the string 'TIME:', the value is assumed to be the output of the pfput_time(3)
function. In this case the first element (epoch time) is taken from the string and 
used as a double-precision epoch time. If the key 'FOREACH' appears, the value is assumed 
to be an array of entities which will create one database row per entry. In this case
a foreach loop will be wrapped around the array of entities, and the string 'FOREACH'
in the value expressions will be replaced by the key on each iteration. If the 'FOREACH'
string appears alone as a value, it will be replaced by the current key. 

.SH OPTIONS
.IP "-p pffile"
This specifies an alternate parameter-file name. The default is orbpf2db.pf

.IP "-s statefile"
This specifies a filename in which to save the state of the program (current orb position).

.IP "-m match"
This specifies a regular-expression with which to select orb packets.
The default is '.*/pf/.*".

.IP "-f from"
This specifies the starting packet for acquisition. Options are 
"newest", "oldest", or a string time specification parsable by str2epoch(3).

.IP "-w mode"
This specifies the write mode for the program, either "add" or "overwrite". 
The default mode is "overwrite". In "add" mode, orbpf2db adds new 
parameter-file rows to the database regardless of existing contents. In "overwrite" 
mode, a search based on primary keys is performed for matching rows. If a row 
already exists, it is overwritten with the new values.
.SH FILES
.SH ENVIRONMENT
.SH PARAMETER FILE
.nf
translations &Arr{
        /pf/orbstat &Arr{
                schema        registry1.0
                tables &Arr{
                        server &Arr{
                                serveraddress   server{address}
                                closes          server{closes}
                                connections     server{connections}
                                errors          server{errors}
                                host            server{host}
                                maxdata         server{maxdata}
                                maxpkts         server{maxpkts}
                                maxsrc          server{maxsrc}
                                messages        server{messages}
                                nclients        server{nclients}
                                nsources        server{nsources}
                                opens           server{opens}
                                orb_start       TIME:server{orb_start}
                                orbversion      server{orbversion}
                                pid             server{pid}
                                serverport      server{port}
                                rejected        server{rejected}
                                started         TIME:server{started}
                                version         server{version}
                                when            TIME:server{when}
                                who             server{who}
                        }
                        clients &Arr{
                                FOREACH         clients
                                when            TIME:client_when
                                serveraddress   server{address}
                                serverport      server{port}
                                thread          clients{FOREACH}{thread}
                                clientaddress   clients{FOREACH}{address}
                                clientport      clients{FOREACH}{port}
                                bytes           clients{FOREACH}{bytes}
                                errors          clients{FOREACH}{errors}
                                fd              clients{FOREACH}{fd}
                                host            clients{FOREACH}{host}
                                lastpkt         TIME:clients{FOREACH}{lastpkt}
                                lastrequest     clients{FOREACH}{lastrequest}
                                latency_sec     clients{FOREACH}{latency_sec}
                                mymessages      clients{FOREACH}{mymessages}
                                nreads          clients{FOREACH}{nreads}
                                nreject         clients{FOREACH}{nreject}
                                nrequests       clients{FOREACH}{nrequests}
                                nselect         clients{FOREACH}{nselect}
                                nwrites         clients{FOREACH}{nwrites}
                                packets         clients{FOREACH}{packets}
                                perm            clients{FOREACH}{perm}
                                pid             clients{FOREACH}{pid}
                                pktid           clients{FOREACH}{pktid}
                                priority        clients{FOREACH}{priority}
                                read            clients{FOREACH}{read}
                                reject          clients{FOREACH}{reject}
                                select          clients{FOREACH}{select}
                                started         TIME:clients{FOREACH}{started}
                                what            clients{FOREACH}{what}
                                who             clients{FOREACH}{who}
                                written         clients{FOREACH}{written}
                        }
                        sources &Arr{
                                FOREACH         sources
                                when            TIME:client_when
                                serveraddress   server{address}
                                serverport      server{port}
                                srcname         FOREACH
                                when            TIME:source_when
                                active          sources{FOREACH}{active}
                                kbaud           sources{FOREACH}{kbaud}
                                latency_sec     sources{FOREACH}{latency_sec}
                                nbytes          sources{FOREACH}{nbytes}
                                npkts           sources{FOREACH}{npkts}
                                slatest         sources{FOREACH}{slatest}
                                slatest_time    TIME:sources{FOREACH}{slatest_time}
                                soldest         sources{FOREACH}{soldest}
                                soldest_time    TIME:sources{FOREACH}{soldest_time}
			}
                }
        }
}
.fi
.SH EXAMPLE
.ft CW
.in 2c
.nf
yukon% orbpf2db -s state/orbpf2db mercali.ucsd.edu db/orbregistry
.fi
.in
.ft R
.SH RETURN VALUES
.SH LIBRARY
.SH ATTRIBUTES
.SH DIAGNOSTICS
.SH "SEE ALSO"
.nf
.fi
.SH "BUGS AND CAVEATS"
.SH AUTHOR
.nf
Kent Lindquist
Lindquist Consulting
.fi
.\" $Id$
