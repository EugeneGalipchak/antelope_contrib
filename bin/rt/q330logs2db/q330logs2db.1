.TH q33logs2db 1 

.SH NAME 
q330logs2db \- monitor q330 log files for particular phrases and add to a db table

.SH SYNOPSIS
.nf
q330logs2db  [-p pf] [-v] [-l match_logname] [-s {OLDEST|start_time} | -S statefile ] orb db
.fi

.SH DESCRIPTION
\fBq330logs2db\fP monitors log packets produced by \fBq3302orb\fP(1) to
find rows which match a regular expression.  The simple match (and reject) 
expressions are kept in a parameter file, q330logs2db.pf.  The matching lines
are placed as a dlcomment into a dlevent table and tagged with a dlevtype.  
See also the programs \fBlogs2dlevent\fP(1) and \fBdlreport\fP(1) which review
the logs written out by \fBorb2logs\fP(1).  \fBdlreport\fP can be run to 
summarize the events.  The parameter files for \fBq330logs2db\fP and 
\fBlogs2dlevent\fP are identical.
.LP
The intent for this script is that it will be run on an operational real-time 
system to help summarize various interactions with the datalogger (currently 
only tested on a Q330).  It assumes that interactions via Willard are noted
with a UMSG or via output from dlcmd.  Hopefully, you can convince those who
interact with the datalogger via a UMSG to use standard phrases... otherwise
this script might be of little use except for capturing commands send by the
data center.  If the output from dlcmd changes, this script will likely be 
less effective.  There have been multiple changes in the message format for 
\fBq3302orb\fP over the years, so results may vary depending on your log vintage.

.SH OPTIONS

.IP "-p pf"
Parameter file name.  Default is q330logs2db.pf.
.IP "-l match_logname"
Regular expression to reduce the number of sources to monitor. The default 
is to review all sources with "log" in the name.  This would include both the
log messages relating to the q3302orb instance \fItargetname\fP/log and to the
dataloggers \fIdlname\fP/log.  You may wish to use an expression that would filter 
out logs such as the \fItargetname\fP/log packets produced by \fBq3302orb\fP.
.IP "-s {OLDEST|time}"
Where to start in the ORB.  Use either \fIOLDEST\fP or a time string.  This is 
an optional argument.  If not used, \fBq330logs2db\fP starts with the next 
new packet in the orb.  If used with -S, and the \fIstatefile\fP exists, this
option is ignored.
.IP "-S statefile" 
Specify a \fIstatefile\fP used for saving and restoring the position of \fBq330logs2db\fP 
when it is started and stopped.  
.IP "-v"
Verbose output.
.IP "-V"
Very verbose output.
.IP "orb"
Orb where log packets are available.  
.IP "db"
Output db that must use the dlevent schema extension to css3.0.

.SH PARAMETER FILE
This is an example parameter file:
.in 2c
.ft CW
.nf

.ne 23


#
# q330logs2db.pf 
#

match &Tbl{
UMSG
recenter
massrecenter
masslock
massunlock
getconfig
getannc
getstatus
reboot
}

reject &Tbl{
#Processing
sbpwr
Baler
dopen
QMASERV
C1_UMSG
Error
Sending
Issuing
}

dlevents &Arr{
#	dlevtype	log_phrase
	service		UMSG
	massrecenter	recenter
	massrecenter	massrecenter
	sensor_lock	masslock
	sensor_unlock	massunlock
	sensor_cal   	calibration
	request_config	getconfig
	request_annc	getannc
	request_status	getstatus
	baler		Baler
	reboot		reboot
}

convert_umsg &Arr{
# UMSG_comment_phrase	dlevtype
        massrecenter    massrecenter
        recenter        massrecenter
        center          massrecenter
        MRC             massrecenter
        mrc             massrecenter
        unlock          sensor_unlock
        lock            sensor_lock
        Cal             sensor_cal
} 

.fi
.ft P
.in
.LP
Which log strings are kept are controlled by:
.IP \fImatch\fP
This is a list of regular expressions that will be searched for in the logs.
.IP \fIreject\fP
This is a list of regular expressions that will be rejected from any previous matches
in the logs.  For instance, based on the default parameter file, if there is a message in the 
log packet that has both "massrecenter" and "Sending", that line will be excluded from the output 
database.
.LP
How the strings are mapped to dlevtypes is controlled by:
.IP \fIdlevents\fP
This is a mapping of a dlevtype to what is found in \fImatch\fP.
.IP \fIconvert_umsg\fP
This is an attempt to map information from a freeform "UMSG" into a dlevtype.   

.SH EXAMPLE
.LP
Run as part of an operational real-time system.  Put the following task in
the Run Array.
.in 2c
.ft CW
.nf
q330logs2db	q330logs2db -p pf/q330logs2db -S state/q330logs2db $STATUSORB $DB
.fi
.ft R
.in

.LP
Capture all information available in the status ORB starting with the 
oldest packet.
.in 2c
.ft CW
.nf
q330logs2db -s OLDEST $STATUSORB $DB
.fi
.ft R
.in

.LP
Capture all information available in the status ORB starting with 
data from 11/1/2008
.in 2c
.ft CW
.nf
q330logs2db -s "11/1/2008 00:00:00" $STATUSORB $DB
.fi
.ft R
.in

.SH "SEE ALSO"
.nf
dlreport(1)
dlcmd(1)
logs2dlevent(1)
q3302orb(1)
.fi

.SH "BUGS AND CAVEATS"
This has only been tested on output log packets from q3302orb(1).  
.LP
This program has not been tested for memory leaks.  
.LP
The field size for the dlcomment is only 120 characters.   I do not know 
what the limit on a UMSG size is so you may overflow the field.
.LP
It may take some adjustment of the parameter file to get (or reject) various
events that you might find interesting.
.LP
Greps of strings from log packets which change format over time are obviously 
prone to errors.  You may not get all of the information you want in the 
dlcomment field.
.LP
.SH AUTHOR
.nf
Jennifer Eakins
ANF-IGPP-SIO-UCSD
.fi

