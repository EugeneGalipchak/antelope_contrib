<chapter>
Tcl/Tk Interface

<subsection Opening a database>
<commands>
dbopen db {r|r+}
    open database db read-only (r) or read-write(r+); returns a dbptr

dbopen_database db[.table] {r|r+}
    open database db, or optionally a specific table. The
    first argument may also be "-", allowing a view to be read from stdin.
    returns a dbptr

dbclose dbptr
    close the database dbptr

dbfree dbptr
    free memory resources and file descriptors for a database view/table

dblookup dbptr database table field record
    return a database pointer for the specified dbptr, database, table, field, and record
    record can be "dbALL", "dbNULL" or "dbSCRATCH", or a value corresponding to field; then
    the first record number where field == value is returned

dbtruncate dbptr n
    truncate the specified table to the first n records

<subsection Manipulating Fields and Records>
dbadd dbptr record
    add the specified record to a table, return record number

dbaddnull dbptr
    add a null record to the table, return record number

dbaddv dbptr table field value [field value ...]
    add new record with specified field values, return record number

dbmark dbptr
    set the specified record to all null values

dbcrunch dbptr
    delete marked (all null) records from the table

dbdelete dbptr
    delete a record


dbget dbptr
    get a table, record, or field from a table

dbgetv dbptr table record field [field ...]
    return a list with the specified values of the specified fields


dbput dbptr value
    put the specified value into the specified location.

dbputv dbptr table record field value [field value ...]
    save the specified values into the specified fields.

<subsection Forming Views>
dbgroup db type field [field ..]
    group the (sorted) input table by the specified fields

dbjoin db1 db2 [join-keys]
    join the two tables (using the specified join keys)

dbjoin_tables dbptr
    returns a list of tables for which some set of join keys can be inferred

dbnojoin db1 db2 [join-keys]
    returns all the records in db1 which do not join with table db2

dbmatches db1 db2 hook [join-keys ...]
    returns a list of records in the table specified by db2 which match (join with) the record specified by db1

dbprocess db [command ...]
    construct a view as series of standard operations

dbsever db table
    remove a table from a joined view

dbsort [-r] [-u] db [fields ..]
    sort a table by fields, or the primary key if no fields are specified
<options>
-r	reverse the sense of the sort
-u	eliminate all records in the output view with duplicate field values
</options>

dbsubset db expression
    returns a db pointer to the rows from the specified table which satisfy expression

dbtheta dbptr1 dbptr2 [ expression ]
    theta join the specified tables


dbselect [-b] [-F separator] [-t] filename db [field ...]
    write selected fields from the input view to the specified filename
<options>
-b	strip blanks from both ends of each field
-t	convert times to readable times
</options>


dbsave_view [-f] db name
    save the specified view as a table in the same database with the specified name
<options>
-f	Allow overwriting files of the same name
</options>

db2pipe db file [record# ...]
    send records from a database view out a unix pipe

dbunjoin dbptr output
    unjoin the specified table, writing new tables into a new database named output

<subsection Miscellaneous Datascope Functions>

dbeval db expression [type]
    evaluate the specified expression, converting to the specified type

dbquery dbptr code
    query the database for various parameters

dbcompile dbptr string
    add attributes and relations to a database by directly compiling schema file fragments

dbfind db first backwards expression [n]
    starting from first, locate the nth row satisfying the given expression


dbadd_remark dbptr remark
    add the specified remark to the specified record

dbget_remark dbptr
    get the remark associated with the specified record

dbgetr dbptr convert_time record# #records [expression [format]]
    return a list containing the specified field or expression for the specified range of records

dbinvalid
    return a db pointer with all elements dbINVALID

dbnextid dbptr name
    get the next (integer) id for the specified name

<subsection Error Handling>
<commands>
elog_init args
    initialize the elog routines with the command name and arguments


elog_log msg
    save a message on the elog message log

elog_notify msg
    write a message other than an error message to the elog facility

elog_complain msg
    write an error message to the elog message facility for immediate output

elog_die msg
    write a message to the elog message facility and die


elog_clear
    clear the elog message log

clear_register flag
    clear the error register, optionally returning contents


elog_mark
    returns the count of messages currently held in the error log

elog_flush deliver first
    get rid of messages after #first in the error log, printing them if deliver is a boolean true

<subsection Instrument response routines>
eval_response resphandle freq_in_hz
    evaluate a response object at a given frequency

free_response resphandle
    free resources for a response object

get_response resphandle {nstages | stage_types | paz stageno}
    get information about a response object

peterson {low|high} frequency rsptype
    compute Peterson low/high noise model

put_response resphandle stageno param_list
    put values into a response object

read_response filename
    read a response object

<subsection Parameter Files>
pfget pf name
    get the value for the specified name from the specified parameter file

pfgetarr variable name
    return the array corresponding to the specified name (eg, %pf#name) in the variable

pfgetlist name
    return the list corresponding to the specified name (eg, @pf#name)

pfput pf name value
    save the specified value into the parameter space

pfputarr pf name [array]
    save the specified array into the parameter space

pfputlist pf name [list]
    save the specified list into the parameter space

pfread pf
    force rereading the parameter file

pfwrite pf filename
    write the specified parameter file



<subsection Seismic Utility Functions>
carsph x y z
    convert from cartesian to spherical coordinates

dbdist lat1 lon1 lat2 lon2
    return the angular distance between the specified locations. All units are degrees.

dblatlon lat lon delta azimuth
    return the latitude and longitude of the point at distance delta, direction azimuth from lat, lon

sphcar lat lon
    convert from spherical to cartesian coordinates

<subsection Time conversion>
epoch yearday
    convert from yearday to epoch

epoch2str epoch fmt
    convert epoch time to a human readable format

str2epoch string
    convert human readable time to epoch time

strdate epoch
    convert epoch time to a human readable date string

strtdelta epoch
    convert a time-difference into a string

strtime epoch
    convert epoch time to a human readable time string

strydtime epoch
    returns a readable time which includes the day of the year inside parentheses

yearday epoch
    convert from yearday to epoch time

<subsection Utility Functions>
makedir dir
    ensure that a directory exists

writefile filename stringname
    write contents of a string variable to a file

datafile envname filename
    returns complete pathname for a datafile
