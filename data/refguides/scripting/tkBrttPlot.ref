<chapter Tk Brttplot>
<info>
package require Brttplot
</info>
<man>
% man bplot_scg 
% man bplot_vector 
% man bplot_thistory
% man bplot_utils
% man brttplot
</man>
<commands>
create_scg db tstart tend ?options?
    create a station-channel-gather data object for plotting with a viewport gpl object
<options>
-net net_expr
-sta sta_expr
-chan chan_expr
-coord coord_flag
-ir ir_flag
-orient orient_flag
</options>

destroy_scg scg_handle
    destroy a station-channel-gather data object

<subsection Vectors>
<commands>
vector_append vector_handle index xvalue ylist [label]
    appends a vector element after an existing element

vector_create [ny] [-tag tag]
    create an empty generic data-vector object

vector_copy vector_handle [-tag tag]
    copy a vector object

vector_eval vector_handle xvalue
    compute and return a y (dependent) value from a vector object

vector_free {-tag tag | vector_handle}
    destroys previously created vector objects

vector_get vector_handle {nx|ny|xy ix}
    get information relating to a vector handle

vector_maxmin vector_handle [iy]
    retrieve min and max x, min and max y from a vector object

vector_puty vector_handle ix ylist [label]
    replace dependent values in a vector object

vector_read filename ?options?
    create a vector object from an input ASCII file
<options>
-tag tag
-loff line_off
-xpos xpos
-ypos ypos1 [ypos2] [...]
-lpos lpos
</options>

vector_transform_edp vector_handle lonr latr
    transform vector longitude-latitude coordinates to
    equal distance projection coordinates in place

<subsection Time Histories>
<commands>
thistory_add thistory time value
    add time/value pair to thistory object

thistory_create maxnp [-tag tag] [-file file]
    create a thistory object, saving data in file

thistory_eval thistory time
    return value corresponding to time for thistory object

thistory_free {-tag tag | thistory}
    free thistory object, or all thistories tagged with tag

thistory_get thistory {np|ty it}
    return information from a thistory object

thistory_maxmin thistory
    return max and min values for thistory object

<subsection Utilities>
<commands>
latlon2edp latr lonr lat lon
    convert latitude-longitude to equal distance projection coordinates

edp2latlon latr lonr delx dely
    convert equal distance projection coordinates to latitude-longitude

getviewportwcoords viewportName x y
    transform a canvas pixel coordinate, x, y, to untransformed data world coordinates
    through viewport viewportName

hls2colorstring hue lightness saturation [gamma]
    convert color in hue-lightness-saturation[-gamma] to standard
    X-window rgb color string

<subsection Plotting>
<commands>

(canvas) create viewport name x y ?options?
    create canvas window for graph
<options>
-margin left right bottom top	margin widths in pixels
-anchor {n|ne|e|se|s|sw|w|nw|c}
-tags taglist
-width width	width in pixels (0: rubber-band)
-height height 	height in pixels (0: rubber-band)
-wtran {none|edp|merc}
-latr reference latitude
-lonr reference longitude
-xmode {lin|log|time} 	
-ymode {lin|log}
-xleft x0 	data-coordinate of left edge of plot 
-xright x1	data-coordinate of right edge of plot 
-ybottom ybottom	data-coordinate of bottom edge of plot
-ytop ytop	data-coordinate of top edge of plot 
-fill color	background color for plot region 
-fill_frame color	background color for margins
</options>

(canvas) create axes viewport ?options?
    create axes associated with viewport
<options>
-tags taglist	
-fill_labels color	x and y labels color
-fill_numbers color	numbers color
-fill_axes color	axes color
-font_labels font	labels font
-font_numbers font	numbers font
-font_numbers_superscripts font	exponent font
-xvisible {0|1}		draw and label xaxis ticks
-yvisible {0|1}		draw and label yaxis ticks
-linewidth width	
-linewidth_small width
-mindx dx
-mindy dy
-xincrement dx
-xincrement_small dx
-xlabel label	label along x axis
-xformat {auto|none|time}	tick label style
-yincrement dy
-yincrement_small dy
-ylabel label	label along y axis
-yformat {auto|none}	tick label style
-axis_style [nesw]*	draw these sides of box
-tic_style ([nesw][ioc])*   ticks inward, outward, center
</options>

(canvas) create grid viewport ?options?
    canvas item to create a mesh of grid lines
<options>
-tags taglist
-fill color
-fill_small color
-linewidth width
-linewidth_small width
-visible {0|1}
-visible_x {0|1}
-visible_xsmall {0|1}
-visible_y {0|1}
-visible_ysmall {0|1}
-mindx dx
-mindy dy
-xincrement dx
-xincrement_small dx
-yincrement dy
-yincrement_small dy
</options>

(canvas) create polypoint viewport ?options?
    create item to draw set of points or symbols
<options>
-vector handle|tag	vector containing the points
-tags taglist
-symbol {point|cross|x|triangle|square|circle|diamond|star}
-fill color	fill the symbols with this color
-outline color	draw outline in this color
-linewidth width
-textforeground color
-font font
-size size
-visible {0|1}
-showsymbols {0|1}
-showtext {0|1}
</options>

(canvas) create polyline viewport ?options?
    create item drawn with lines 
<options>
-vector handle|tag	vector containing the points
-thistory handle|tag
-tags taglist
-fill color	if specified, fill object with color
-outline color	draw lines in this color
-linewidth width
-label label
-visible {0|1}
</options>

(canvas) create ptext viewport textstring x y ?options?
    canvas item to plot text in data coordinates
<options>
-tags taglist
-fill color
-font font
-visible {0|1}
-justification {n|ne|e|se|s|sw|w|nw|c}
-angle angle
</options>

(canvas) create map viewport ?options?
    canvas item to plot world maps using equal distance projection
<options>
-tags taglist
-fill_land color
-fill_water color
-coasts color:linewidth
-political index:color:linewidth,...
-rivers color
-visible {0|1}
-resolution {auto|crude|low|intermediate|high|full}
</options>

