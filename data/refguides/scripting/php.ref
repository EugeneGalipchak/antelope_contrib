<chapter PHP Interface>
<info>
dl( 'Datascope.so' ); 
</info>
<man>
% man Datascope_PHP
</man>

<subsection Opening a database>
<function>

ds_dbopen (database, permissions)
    returns a database pointer to the database

dblookup ($db, database, table, field, row)
    returns a database pointer for the specified database, table, field, and row.
ds_dbclose ($db)
    close a database

dbfree ($db)
    free memory for a database view

dbdestroy ($db)
    destroy all tables of a database

dbtruncate ($db, $nrecords)
    truncate a database table to the specified length

dbdelete ($db)
    delete rows from a database

dbmark ($db)
    mark rows for deletion

dbcrunch ($db)
    remove marked (null) rows from a database table

<subsection Manipulating fields and records>

dbaddv ($db, field_name, value, [field_name, value, ...])
    add a new row with the specified values to the database

dbaddnull ($db )
    add a new null row to the database.

dbadd ($db [, $record] )
    add a new row to the database from the scratch record or 
    from the specified string.

dbputv ($db, field_name, value, [field_name, value, ...])
    change the fields for an existing row to the specified values

dbput ($db [, string])
    put a raw field or an entire record into database from the scratch record [or the specified string]

dbgetv ($db, field_name [, field_name, ...])
    returns the values of the specified fields for a particular rows

dbget ($db [, 0])
    get a raw field or an entire record database from the [or load it into the scratch record]

dbadd_remark ($db, remark )
    add comment in remark table for the specified row

dbget_remark ($db)
    get any comment from remark table for the specified row

db2xml ( $db [, string flags [, string rootnode [, string rownode [, array fields [, array expressions]]]]] )
    returns an XML structure corresponding to a view

<subsection Forming views>

dbprocess ($db, commands)
    returns a new view which is the result of applying the dbprocess
    commands to the input view; possible operations are: dbopen,
    dbjoin, dbgroup, dbleftjoin, dbnojoin, dbselect, dbseparate,
    dbsever, dbsort, dbsubset, dbtheta, dbungroup

dbsort ($db [, -u][, -r][, key, key, ...])
    sort a view by the specified fields

dbgroup ($db, key [, key, ...])
    group the input view according to the specified keys

dbungroup ($db)
    separate a grouped view into its component rows

dbsubset ($db, expression)
    returns a new view which is the set of all rows which satisfy the expression

dbseparate ($db, table)
    returns a view containing records from the specified table that are in the input view

dbsever ($db, table)
    return a view that omits the specified table

dbjoin ($db1, $db2, ['-outer'], [join-keys])
    create a new view from the input views, using join keys if specified

dbtheta ($db1, $db2, [expression] )
    create a new view with all combinations of rows, matching expression if specified

dbnojoin ($db1, $db2, [join-keys])
    return view with all rows in db1 which don't join to db2

dbunjoin ($db, database)
    create a new database from the records of the input view

<subsection Handling Waveform Data>

trloadchan ( $db, t0, t1, sta, chan )
    load a channel of waveform data into a Datascope trace object

trsample ( $db, t0, t1, sta, chan [, apply_calib] )
    load a channel of waveform data into a PHP array of alternating epoch-time and data-value

trapply_calib ( $tr )
    multiply waveform data in trace object by calib value

trextract_data ( $tr )
    extract waveform data into a PHP array

trdata ( $tr [, i0 [, npts]] )
    extract waveform data into a PHP array, specifying the starting index $i0 and maximum number of points to return if desired

trfilter ( $tr, filter )
    filter data in-place according to the given filter-description string

trfree ( $tr )
    free a Datascope trace-object structure

<subsection Miscellaneous Datascope Functions>
dbquery ($db, code)
    query the database for information, e.g. dbquery($db, "dbRECORD_COUNT"). see 
    Datascope Constants for valid query codes.

dbnrecs ($db)
    query the database for number of records in a table or view (same as
    dbquery for dbRECORD_COUNT)

dbex_eval ($db, expression)
    evaluate expression for a particular row

dbcompile ($db, string)
    dynamically add new attributes or relations to the schema

dbnextid ($db, id_name)
    get the next free id value for the specified id_name

dbinvalid ()
    return a database pointer of dbINVALID

dbstrtype ($db, string)
    classifies string, returning "strREAL", "strINTEGER", "strNULL", "strSTRING", 
    "strTIME", "strFIELD", or "strUNKNOWN"

dbextfile ($db [, base-table])
    return the filename for an external file for a particular row in a view

dbfind ($db, expression, [, first [, reverse]])
    find a record matching an expression

dbmatches ($dbk, $dbt, $hookname [, join-keys])
    return row numbers of records in $dbt that match the single row $dbk

<subsection Time conversion>

pfget (pfname, key)
    return the value for the key from the parameter file pfname

pfget_boolean (pfname, key)
    return 0 or 1 depending on the value of key in the parameter file pfname
    
<subsection Time conversion>

strtdelta (dt)
    convert the time-difference dt (in seconds) to a string, eg "30:35 minutes"

strtime (epoch)
    convert an epoch time to a string date and time

strydtime (epoch)
    convert an epoch time to a string date and time including julian day

strdate (epoch)
    convert an epoch time to a string date

strlocaltime (epoch)
    convert an epoch time to a string date and time in local timezone

strlocalydtime (epoch)
    convert an epoch time to a string date and time including julian day, in local timezone

strlocaldate (epoch)
    convert an epoch time to a string date in local timezone

<subsection Instrument response routines>

dbresponse( $filename )
    return a PHP resource representing the response curve in $filename

eval_response( $response, $omega )
    return a two-element array of the real and imaginary response at $omega
