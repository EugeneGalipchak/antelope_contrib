<chapter Tcl Orb Access>
<info>
package require Orb
</info>
<man>
% man tclorb
</man>

<subsection Orbserver communications>
<commands>
orbopen orbname permission
    open an orb connection

orbclose orb
    close an orb connection for the specified orb descriptor


orbafter orb time
    set the orb read pointer to the first packet after specified time

orbseek orb whence
    set the orb read pointer, returning the new read-position packet id.

orbtell orb
    returns the current read/write position pktid fo the specified orb

orbping orb
    returns the version number of the specified orb


orbselect orb expr
    read only sources matching expr, returning the current number of matches

orbreject orb expr
    don't read sources matching expr, returning the current number of matches


orbreap reap_handle
    read a new orb packet from a previously started reap thread, returning a packet handle

orbreapstart orb [block]
    start reaping (reading) packets from orb, returning a read handle.

<subsection Orbserver status>
orbstat orb [args]
    returns specified status information for orb
<example>
address     closes      connections 
errors      host        maxdata     
maxpkts     maxsrc      messages    
nclients    nsources    opens       
orb_start   pid         port        
rejected    started     version     
when        who         
</example>

orbgetdatasources orb
    returns list of source names for orb

orbsources orb
    returns handle for orb source status

orbsourcesfree handle
    frees orbsources handle resources

orbgetnsources handle
    returns the number of individual sources referenced by the sources_handle

orbgetsource handle n [args]
    returns specified source information for the n'th source
<example>
active       nbytes       npkts        
slatest      slatest_time soldest      
soldest_time srcname      
</example>

orbclients orb
    returns handle for orb client status

orbclientsfree handle
    frees orbclients handle resources

orbgetnclients handle
    returns the number of clients for client handle

orbgetclient handle n [args]
    returns specified client information for the n'th source
<example>
address     bytes       errors      
fd          host        lastpkt     
lastrequest mymessages  nreads      
nreject     nrequests   nselect     
nwrites     packets     perm        
pid         pktid       port        
priority    read        reject      
select      started     thread      
what        who         written     
</example>  

<subsection Packet handling>

orbpfget pf_handle name
    returns the value for parameter name from the referenced pf_handle

orbpffree pf_handle
    frees the parameter file object referenced by pf_handle


orbpktfree pkt
    frees the orb packet referenced by the pkt

orbpktchanfree pkt
    free the specified unstuffed packet-channel


private orbpktchangetcd1 packetchan_handle
    returns CD1 status information for CD-1-format packet channels

private orbpktchangethdr packetchan_handle
    returns packet-channel header information

orbpktunstuffdata pkt
    unstuff an orb packet pkt, returning a list of packet channels

orbpktgetdb pkt db
    unstuff a database packet pkt, returning a database pointer to the (scratch) record 

orbpktgethdr pkt
    returns {pktid time srcname nbytes} for pkt

orbpktgetlog pkt
    unstuffs log packet pkt, returning the log string

orbpktgetpf pkt
    unstuffs pf packet pkt, returning a pf reference


str2orbpfpkt orb name string
    writes a parameter-file object defined by string as a parameter-file packet on orb


<subsection Quanterra special>
orbpktgetqtping pkt
    returns a string with the response to a qt2orb ping command

orbpktgetstatus pkt
    returns a string with qt2orb status information

orbqtpingsend orb
    sends a ping command to qt2orb via the specified command-orb

orbqtshell qtshell_handle
    handle qtshell through orb

orbqtshellfree qtshell_handle
    free a quanterra shell handle

orbqtshellstart cmdorbname netsta cmd
    start a quanterra shell


orbhelp
    print synopsis lines for orb Tcl commands
