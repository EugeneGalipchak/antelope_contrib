<chapter Miscellaneous Utilities>
<commands>

<subsection Examples and Templates>
mkmk [ - ]
    show prototype Antelope makefile (- suppresses comments)

manpage [ - ]
    show prototype Antelope man page (- suppresses comments)

template [dbsimple.c|simple.c|perl|tcl]
    get a template from templates directory

<subsection Miscellaneous>
private check_antelope_installation
    spot check for proper Antelope installation

check_license [license_filename]
    verify license.pf is valid

check_path [-v] [path]
    check a path to ensure that 'other' users can traverse it

private check_visual [-display display_name]
    check out the default X-windows display visual

private install_antelope
    interactive installation of Antelope from a cd

private register_antelope
    gui for requesting Antelope license


abspath apath [...]
    construct absolute path corresponding to input apath

relpath here there
    construct relative pathname from here to there

cleanpath apath
    eliminates repeated slashes, unnecessary ./

deprecated uwd [-f configfile]
    print canonical working directory (for ancient automounters)


datafile [-aeV] {name | dir name | env dir name}
    show what files will be selected by the datafile/datapath/datasearch(3) routines.

epoch [options] [ +format ] [ time/date components ]
    convert time formats.
<options>
-e	echo interactive input
-i tz	specify an input timezone tz, eg US/Mountain
-o tz	specify an output timezone tz, eg Japan
+format	specify the format of the output (refer to epoch escapes table)
</options>

pfcompare [options] pf
     find differences between local parameter file and remainder of pf files found along PFPATH
<options>
-s	show stock version (instead of local)
-u	show unique items
</options>

pfdiff [-o newpf] pf1 [pf2]
    compare parameter file pf1 to pf2 (or $ANTELOPE/data/pf/pf1 if pf2 is not specified). -o interactively selects parameters from pf1 and pf2 to construct new parameter file newpf

pfecho [options] name [ param ...]
    print out parameters from parameter files
<options>
-i	interactive mode
-q	don't echo the key
-w	show all pf files read
-W	show all pf filenames examined (some may not exist)
</options>

pfwhich pf 
    show what files are read for pf

ttcalc method model phase distance depth
    print travel time and slowness calculation results for specified
    method, model, and phases for an event at distance and depth.

gsregion [lat lon]
    show geographic and seismic region numbers and names for lat, lon

dbsetrgn db
    set seismic and geographic region codes in origin table for database db

capitalize_station dbname
    Capitalize the sta field in all database tables

tabulate_missed_stations translation_db dbname [dbname...]
    Find station names that do not appear in the translation_db

translate_stachan_names translation_db dbname
    Apply the station name-translations listed in translation_db
	
private children pid
    returns children of process pid

private getunique
    return unique integer

private idinfo
    gather id information for register_antelope

deprecated pathf [ -f configfile ] [ paths... ]
    filter for translating pathnames

private perl_unbuffer command
    use pty/tty pair to get unbuffered output from a command


tksend [options] app_name [message]
    send a message using version 3 or 4 of the tcl/tk send mechanism
<options>
-i	read stdin for more messages
-p	wait for and print returned messages
-verbose	be more verbose
-validate	validate the application name and return the disposition and the version number
-version {3|4|auto}	select older or newer tksend protocol; default is auto{matic}
-wait	wait for a response
</options>


private unregister window_name
    eliminate defunct tk send registries

comsim connection
    monitor, test and debug serial or ip communications

reflect [-d dir] [-v] remote_host remote_file
    keep local files up to date with remote copies

reflectd [-v]
    server companion to reflect

warp command
    run command on opposite display (when machine has 2 displays)

build [pf] [pf_dependent_arguments]
    framework for constructing simple gui interfaces based on
    parameter files and perl scripts

refguide {creference|user|scripting}
    prepare a Framemaker mif version of a reference guide

txform [-v] dir filename
    text transform program

grepsrc [options] [-cfhilMmpsTtvyw] [-d dir] [pattern [dir]]
    look through certain files below dir for a pattern; useful for finding occurrences of a call to a function, or for many other problems
<options>
-i	case insensitive
-v	show the find command, and list the files searched.
-l	show only the filenames with matching lines.
-w	show all matches, not just word matches.
restrict the searches to certain files by using any combination of the following:
-c	c source files
-f	fortran source 
-h	include files 
-m	manual pages 
-M	Makefile or makefile
-p	perl source 
-s	shell source 
-t	tcl source 
-y	(f)lex and yacc source
-T	all text files
</options>

ldlibs [options] names
    provide information about object libraries and link lines
<options>
Modifying Options
-f	Generate fortran ldlibs line (default is c).
-i	Initialize the database, eg, completely rebuild it.
-k	Rebuild the database, if it's out of date.
-n	Don't use macros to collapse the dependency list.
-v	Be more verbose.
-x	Specify entry points on command line, rather than object files.
Different Modes
-r lib1 lib2	show references from lib1 which are resolved in lib2.
-R a.o b.o ..	lib show undefined references from .o files which are resolved in lib
-D lib	show references defined in lib
-N lib	show references not defined in lib
-l lib	show libraries loaded by lib
-L lib	show libraries which load lib
-u lib	show libraries which are needed by lib
-U lib	show libraries which need lib
-s lib1 lib2	show shared definitions between lib1 and lib2
-S lib1 lib2	show shared undefined references between lib1 and lib2
-t lib1 lib2	show definitions unique in each library.
-T lib1 lib2	show needs unique in each library
-w	show what libraries define the named routine.
-W	show what libraries require the named routine.
</options>

deposit [-r] file dest
    installs file in directory dest with appropriate permisssions; with -r option, installs file as the file dest.

produce [-v] exec [exec2 ...]
    use standard headers from template directory to create executable script exec from files with proper suffix

installman manpage dir
    install the text manpage into the directory dir, modifying .TH line appropriately
	
private nxplotd -window window [-geom geomspec] [-title title] [-icon_pm icon_pm]
    X-windows plotting daemon
