<chapter Foreign Data Formats>

<subsection Exporting data from Datascope database>
<commands>
autodrm [options] [files]
    Antelope IDC/GSE2.1 AutoDRM Server
<options>
-d	debug: print output to stderr rather than sending mail
-D dir	run in specified directory dir
-p pf	use specified parameter file pf
-v	more verbose
</options>

private autodrm_wrapper
    script which is run by sendmail to run autodrm

dbresp2autodrm view
    convert response information from view to autodrm format

rtbulletin [-Av] [-s subset] aview [t0 [t1|period]]
    create a bulletin from input view aview (-A causes standard autodrm output)


db2ah [options] dbin dbout
    convert css waveform files into ah format
<options>
-sc	sta_chan
-ts	start time
-te	end time
-w	wfdir
-gap	{ none | zero | interp }
-counts
-h	help
-v	version
</options>

private db2ew_wave_server [-vV] [-p pf] dbname
    attach to a CSS3.0 database and make the data
    therein accessible via the Earthworm protocols.

db2miniseed [-vV] [-r record_size] [-l {1|2}] [-n net] db [output]
    create miniseed from input database
<options>
-r size	specify record size (default 4096)
-l {1|2}	specify steim compression level (default 2)
-n net	specify default network
</options>

db2sac [options] dbin dbout
    convert css waveform files into sac format
<options>
-i	intel order output
-sc sta/chan	select sta/chan pairs with dbpick style pseudo-glob
-ts t0	starting at time t0
-te t1	ending at time t1
-w wfdir	write waveform files into wfdir (default "sac")
-gap { none | zero | interp }	handle gaps according to rule (default zero)
-counts	keep output waveform in counts (don't apply calib)
</options>


db2sd [-cv] [-n net] [-l lbl] db sd
    create a SEED volume sd from database db (db must contain affiliation, network, sensor, site, stage, calibration and wfdisc tables)

mk_dataless_wfdisc [-v] [-p pf] dbin
    make fake wfdisc file in order to create a dataless seed file

trash_data [-inv] sd 
    truncate SEED volume sd following the station headers, creating a dataless SEED volume

mk_dmc_seed [-nvV] [-l secs] [-r days] [-M maxmem] [-m email] [-s stime] [-t tape] [-d dir] rt_db
    build IRIS DMC files on tape or disk


db2segy db outfile [-pf pf]
    convert waveforms from input database db to a segy disk image

<subsection Importing data into a Datascope database>
<commands>
aah2db [-vV] ahfile [ahfile...] dbname
    convert non-XDR AH files to database

ah2db ah1 [ah2 .. ] dbout
    create CSS database dbout from AH format waveform files ah1, ah2, ...

autodrm2db [-vV] reply1 [reply2 ..] dbout
    read autoDRM replies reply1, reply2, ... and copy into a output database dbout

edr2db edr dbout
    create arrival, origin and assoc rows in database dbout from USGS EDR

gnis2db gnis_file dbname [State]
     convert GNIS feature-name files to database

grdinfo2db [-n name] [-t type] gridfile dbname
     add GMT grid-file information to database

deprecated isc2db [-c] [-p] [-s start] [-e end] isc_bulletin dbout
    read the ISC bulletin from NEIC CD into CSS database dbout

deprecated pde2origin pde dbout [-auth author]
    create origin records in database dbout from input PDE file pde

deprecated qed2origin qed dbout
    create origin records in database dbout from input QED file qed

pick2db [-cvp] [-r reference_db[:reference_db...]] pickfile [pickfile...] dbname
    convert hypoellipse pickfile(s) to CSS3.0 database
<options>
-c	attempt to fake channel names
-v	verbose
-p	put component code into channel field
-r reference_db[:reference_db...]]
 	add references to other databases in descriptor file
</options>

reb2db filename [filename ...] db
    convert Reviewed Event Bulletins of GSE2.0, IMS1.0, or IMS1.0:SHORT format to CSS3.0 database db

ref2db [options] input dbname [start-time [end-time]]
    convert data in REFTEK format to css3.0
<options>
-d datatype	specify waveform datatype
-e	create files based on RefTek event start and end time
-l	create logfile containing instrument status information
-m das	copy only packets with serial number das
-p pf	specify parameter file to match das to station name
-s size	default segmentation of waveforms
-n net	specify miniseed network
-v	print srcname and time of every packet read
-w	do not save waveform data; used to extract log file or get gap info
</options>

psd2db [options] sd dbout
    read PASSCAL SEED volume sd and produce tables wfdisc, sensor, site, sitechan, and instrument in database dbout
<options>
-n	require that dbout database contain no records
-w	only create a wfdisc table
-t tolerance
-respdir dir1	use directory dir1 for response files
-stagedir dir2
 	also create stage table, using directory dir2 for stage table response files
-v	more verbose
</options>

sac2db sac1 [sac2 ... ] dbout
    create wfdisc, site, sitechan (and possibly origin, event, arrival and assoc records) in output database dbout from SAC files sac1, sac2 ...

scec2db [options] dbname
    retrieval and conversion of SCEC bulletin
<options>
-v	verbose
-d	retrieve one day
-w	retrieve one week
-m	retrieve one month
-f 	file
-s	start_time
-e 	end_time
-c	{catread|scecdc|hypo71|hypo2000}
</options>

sd2db [options] sd dbout
    read SEED volume sd and produce tables wfdisc, sensor, site, sitechan, and instrument in database dbout
<options>
-d	print out each blockette as it is read
-f n	skip to file n (of input tape)
-c n	read just n files from the input tape
-i	create wfdisc and extract wave form data without using other header information
-r dir	save response files in directory dir
-s	sweep identical time adjacent tuples into a single tuple
-S stachan	extract waveforms only for station/channel pairs matching dbpick style pseudo-glob stachan
-t	don't create wfdisc table
-v	print summary of the blockettes read and processed
-w dir	save waveforms in directory dir
-x id	write entries in seedindex table showing stations and time range contained on tape id
-z	compress waveform files (using compress(1)) after they are complete
</options>

segy2css [-event] [-ftbl] "fname"
    convert data in PASSCAL SEGY format to CSS format

miniseed2db [-T tolerance] [-v] miniseed [msd2 ...] db
    create wfdisc rows in db for miniseed volume(s)

dbsteimu [options] input [new_database]
    create wfdisc file from miniseed
<options>
-o	overwrite the records in the existing input database
-s	input is a miniseed volume.
-S	create wfdisc which references input miniseed volume, rather than copying out the waveform data
-v	more verbose.
-w	wfname
</options>

fix_miniseed [-iv] [-d db] [-{p|P} pf] miniseed ...
    change the network, station, channel and/or location
    codes in miniseed volumes

deprecated ucsdsp2db stapardir responsedir netcode netname dbout [-s]
    convert UCSD stapar files to a CSS v3.0 database

deprecated ucsdwf2db stapardir dbin dbout
    convert UCSD raw data wfdiscs and arrivals to a CSS3.0 database

Xphase2db db [-phase name]
    convert an input Xphase pick file to css3.0 arrivals

<subsection Examining foreign files>
sachd [sac1 ...]
    print header information from SAC files sac1, ...

sdd [-s] sd
    dump the blockettes (only a summary if -s) of a SEED volume sd

dsteim [sd]
    verbosely dump miniseed data frames

msdd [-dvx] miniseed ...
    dump miniseed volume
