<chapter Waveforms>

<subsection Waveform manipulation>
<commands>
trexcerpt [options] dbin dbout [start {duration|end}]
    extract waveform segments from a database
<options>
-A	autodrm style (ascii) waveform files
-o datatype	specify output waveform datatype (default = sd)
-a	append to existing waveform files if present
-w pattern	specify naming convention for output waveforms
-m {time|convert|event|arrival|explicit}
 	specify mode (default = time)
-g	eliminate 'marked' data gaps
-c expr	sta/chan/instrument subset
-s expr	evid/orid/arid subset
-j expr	origin/site subset
-p	in arrival mode, save waveforms only for the pick channel 
-W db	specify database from which waveforms come
-d	write complete database with site, sensor, sitechan, instrument
-e	include correct subset of event, origin, origerr, arrival, and assoc in the output database
-v	more verbose
</options>

trtally [-d output] [-ekv] [-r start stop] db1 [{+|-|!|&|^|a} [db2]]
    compute intersections and other operations on two sets of waveform time ranges

deprecated dbsteimc [options] dbin [dbout]
    compress waveform data using steim compression (see also trexcerpt)
<options>
-v	Report compression statistics for each waveform
-l {1|2}	Compression level (default = 2)
-L loc_code
-n net
-o	Overwrite the records in the wfdisc table
-r val	Replacement value for data gaps
-p pfname
-w wfname
-s outfile
</options>

dbwfexcerpt [options] dbin[.table] dbout
    excerpt waveform data by event or origin (deprecated)
<options>
-event [expr] | -origin [expr] | -input [expr]
	choose operational mode for waveform selection: by event, by origin, or by input view; select subset of input view with Datascope expression expr
-sift expr	select subset of waveforms with expression expr
-begin expr	calculate start time for waveform using expr
-end expr	calculate end time for waveform using expr
-pre t	start time is t seconds before predicted p arrival
-sfactor f	end time is f*(p-s) + predicted s arrival time
-tolerance x	splice waveform segments together when sample time mismatch is less than x*sample period
-v	verbose
</options>

event_archive [options] dbin dbout
    copy event information (arrivals, origins, and waveforms) from continuous database dbin to archive dbout
<options>
-l n	wait n days before copying an event
-m addr	send errors as email to addr
-s t1	process events after time t1
-e t2	process events before time t2
-n	ignore check for reviewed events
-p pf	use parameter file pf
-t tdb	use temporary database tdb
-v	be verbose
-V	be extremely verbose
</options>

trsample [options] database[.table] [time]
    print a few samples from waveforms in a database
<options>
-c	apply calib to the samples
-e	read data from each row in the table
-o	write samples one to a line
-[i|t|T]	show integer, epoch time, or readable time index for each sample
-n npts	print npts samples
-s expr	subset input according to expr
</options>

trsignal [options] database
    create wfdisc records with test signal data
<options>
-v	be more verbose
-w pattern	specify naming convention for output waveforms
-d datatype	specify output datatype (default = "as")
-a amplitude
-b timebase	generating function base time
-c channel	specify chan code
-f f0	generating function frequency in hz
-g calib	specify calib
-k	keep output as floating point, not integers
-n nsec	length of output waveform
-p phase	generating function phase
-r samprate	sample rate
-s station	sta code
-t time	start time for output
-T type	sin, cos, sqr, tri, saw, dlt, ran, stp, pkt, dif
-{A|D|V}	segtype
-y yaw	constant signal drift
</options>

deprecated extrd dbname|wfd_dir|"wfd_fnames" stime etime
    extract specified segment of the CSS data
<options>
-c chan
-n network
-o outdir
-s sta
</options>

dbdec [options] dbin dbout chan_maps dec_stage1 [dec_stage2 ...]
    decimate waveform data
<options>
-sift expr
-c calper
-wfdir wfdir
-f format
</options>

<subsection Analysis>
dbap [options] -dbin dbin -recipe recipe1 [recipe2 [...]]
    database array processing program
<options>
-script script_file
-dbout dbout
-v verbose
-ts tstart_time
-te end_time
-arid arid
-arid_t0 arid_t0
-arid_tw arid_tw
-chan chan
-filter filter
-samprate samprate
-azimuth azimuth
-slow slow
-name1 value1 [-name2 value2] [...]
</options>

dbwfmeas [options] {detection|arrival|time staexpr chanexpr tstart twin} dbname
    make waveform measurements from a database
<options>
-p parameter_file
-net net
-v
-outrecno
-exitonerror
</options>

dbnoise dbname
    make power spectral density plots of noise

displayspec dbname
    display power spectral density results

<subsection Waveform display>
<commands>
dbplotcov database sta:chan tstart tend [-h[scale]]
    make a plot and listing of waveform coverage from a database

dbrsec [options] db
    make record section plot of waveforms
<options>
-sc sta:chan
-orid orid:chan
-top top
-bot bot
-tstart tstart
-twin twin
-f filter
-sift sift
-clip {on|off}
-vred vred
-gain gain
-amp amp
</options>

dbspgram [options] dbname sta chan tstart twin
    compute time varying spectragram
<options>
-fmin fmin
-fmax fmax
-units {D|V|A}
-thalf thalf
-noic
-ampdecades ampdecades
-ps psfile
</options>

dbpick [options] dbname
    waveform review, pick arrivals, and edit a CSS relational database (see .dbpickrc for filter specs)
<options>
-sc sta:chan	specify station/channel "glob"; eg "*:*Z"
-ts tstart	specify start time
-te tend	specify end time
-tw twin	specify window time width
-noexist
-nostarttalk	suppress startup usage chatter
-winfile wfile
-appname name
 	specify tksend application name
-gaps {segment|zero|interp|none}
-comout comfile
-geom WxH+X+Y
</options>

tkdbpick [options] {dbname|-}
    waveform review, pick arrivals, and edit a CSS relational database
<options>
-pf pfname
-sc sta:chan
-ts_sift tstart_sift
-te_sift tend_sift 
-ts tstart_display 
-tw twin_display 
-gaps {segment|zero|interp|none} 
-maxchannels maximum_channels_in_display 
-appname tkdbpick_application_name 
-comout comfile 
-geom WxH+X+Y 
-stam {css|seed} 
-trcrm {both|time|none} 
-ampm {auto|auto0|auto1|autoa} 
-bg tracewin_background_color 
-fg tracewin_foreground_color 
-cr tracecursor_foreground_color 
-fgcss sta_css_label_foreground_color 
-fgseed sta_seed_label_foreground_color 
-fgfil filter_label_foreground_color 
-bga arrival_background_color 
-fga arrival_foreground_color 
-bgsa selected_arrival_background_color 
-fgsa selected_arrival_foreground_color 
-timefm time_format_string 
-datefm date_format_string 
-phase_default default_phase_code 
-switchbuttons
-noedit 
-nosort
-noshowwfs 
-noshowarrs
-noshowpreds 
-cliptraces
-counts 
</options>

trdisp [-r] [-s subset] [-w hours] database[.table] [start [range]]
    display waveform data and arrivals from database or view


dbheli [options] dbname sta chan tstart twinline nlines scale
    make helicorder type plot of waveform
<options>
-f filter
-o dborigin
-ps psfile
</options>

<subsection Waveform Verification>
dbversac database
    compare sac file headers with CSS database

dbchkwf [ -v ] database
    file consistency check for wfdisc

dbcmpwf [-av]  db1[.table] record1 db2[.table] record2
dbcmpwf [-asv] db1[.table] db2[.table]
dbcmpwf [-a] -i db1[.table] [db2[.table]]
dbcmpwf [-t]   db1[.table] db2[.table] time {endtime|range}
    compare waveform files from two database records or tables.

dbversdwf [-s subset] [-dvw] database
    check SEED format waveform files for consistency with wfdisc

dbcheckseed [-s] [-t tolerance] dbname
    check PASSCAL generated wfdisc table for errors

