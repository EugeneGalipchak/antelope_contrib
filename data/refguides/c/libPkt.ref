<library>
Orb Packets 
Pkt
stock posix4 nsl socket m
ORBLIBS
Pkt.h
Each orb packet is made up of nbytes data bytes, plus a srcname which indicates its source and its packet structure, plus a time.  

<cdeclarations>
int unstuffPkt ( char *srcname, double time, char *packet, int nbytes, Packet **pkt )
    unpack binary packet wth size nbytes and specified srcname and time into c struct Packet pkt.

void showPkt ( int pktid, char *srcname, double time, char *packet, int nbytes, FILE *file, int mode )
    display the orb packet with specified pktid, srcname, time and size nbytes on output file; mode may be PKT_TERSE, PKT_NOSAMPLES, PKT_UNSTUFF or PKT_DUMP.

int stuffPkt ( Packet *pkt, char *srcname, double *time, char **buffer, int *n, int *size )
    from c structure pkt, create binary representation of packet in buffer.  returns srcname, time, 
    length of packet n, and size of buffer (size >= n).


Packet *newPkt ( void )
    create a new, empty, initialized Packet structure

void freePkt ( Packet *pkt )
    free memory associated with a Packet structure

void clrPkt ( Packet *pkt )
    reset all parameters in a Packet structure


PktChannel *newPktChannel ( void )
    create a new, empty, initialized PktChannel structure

void freePktChannel ( PktChannel *achan )
    free memory associated with a PktChannel structure

void clrPktChannel ( PktChannel *achan )
    reset all parameters in a PktChannel structure



void join_srcname ( Srcname *parts, char *srcname )
    create orb srcname

void split_srcname ( char *srcname, Srcname *parts )
    tear apart orb srcname


PacketType *suffix2pkttype ( char *suffix )
    return PacketType corresponding to srcname suffix

PacketType *header2pkttype ( short hdrcode, short bodycode )
    return PacketType corresponding to hdrcode and bodycode (when no suffix is
    available).
