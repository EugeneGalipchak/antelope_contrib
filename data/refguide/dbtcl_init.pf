base_section Tcl/Tk Interface
Entries &Tbl{
	&Arr{
		command dbdist
		args lat1 lon1 lat2 lon2
		options &Tbl{
		}
		section Seismic Utility Functions
		description Return the angular distance between the specified locations. All units are degrees.
		private 0
		deprecated 0
	}
	&Arr{
		command dblatlon
		args lat lon delta azimuth
		options &Tbl{
		}
		section Seismic Utility Functions
		description Return the latitude and longitude of the point at distance delta, direction azimuth from lat, lon
		private 0
		deprecated 0
	}
	&Arr{
		command sphcar
		args lat lon
		options &Tbl{
		}
		section Seismic Utility Functions
		description Convert from spherical to cartesian coordinates
		private 0
		deprecated 0
	}
	&Arr{
		command carsph
		args x y z
		options &Tbl{
		}
		section Seismic Utility Functions
		description Convert from cartesian to spherical coordinates
		private 0
		deprecated 0
	}
	&Arr{
		command clear_register
		args flag
		options &Tbl{
		}
		section Error Handling
		description Clear the error register, optionally returning contents
		private 0
		deprecated 0
	}
	&Arr{
		command datafile
		args envname filename
		options &Tbl{
		}
		section Getting information about the Database
		description Returns complete pathname for a datafile
		private 0
		deprecated 0
	}
	&Arr{
		command db2pipe
		args db file [record\# ...]
		options &Tbl{
		}
		section Opening a database
		description send records from a database view out a unix pipe
		private 0
		deprecated 0
	}
	&Arr{
		command dbadd
		args dbptr record
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Add the specified record
		private 0
		deprecated 0
	}
	&Arr{
		command dbadd_remark
		args dbptr remark
		options &Tbl{
		}
		section Special Functions
		description Add the specified remark to the specified record
		private 0
		deprecated 0
	}
	&Arr{
		command dbaddnull
		args dbptr
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Add a null record
		private 0
		deprecated 0
	}
	&Arr{
		command dbaddv
		args dbptr table field value [field value ...]
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Add a new record with the specified field values, returning record number
		private 0
		deprecated 0
	}
	&Arr{
		command dbclose
		args dbptr
		options &Tbl{
		}
		section Opening a database
		description Close a database and free associated memory
		private 0
		deprecated 0
	}
	&Arr{
		command dbcompile
		args dbptr string
		options &Tbl{
		}
		section Special Functions
		description Add attributes and relations to a database by directly compiling schema file fragments
		private 0
		deprecated 0
	}
	&Arr{
		command dbcrunch
		args dbptr
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Crunch out (delete) null records in the specified table
		private 0
		deprecated 0
	}
	&Arr{
		command dbdelete
		args dbptr
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Delete the specified record
		private 0
		deprecated 0
	}
	&Arr{
		command dbeval
		args db expression [type]
		options &Tbl{
		}
		section Evaluating expressions
		description Evaluate the specified expression, converting to the specified type
		private 0
		deprecated 0
	}
	&Arr{
		command dbfind
		args db first backwards expression [n]
		options &Tbl{
		}
		section Special Functions
		description starting from first, locate the nth row satisfying the given expression
		private 0
		deprecated 0
	}
	&Arr{
		command dbfree
		args dbptr
		options &Tbl{
		}
		section Opening a database
		description Free memory resources and file descriptors for a database view/table
		private 0
		deprecated 0
	}
	&Arr{
		command dbget
		args dbptr
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Get a table, record, or field from a table
		private 0
		deprecated 0
	}
	&Arr{
		command dbget_remark
		args dbptr
		options &Tbl{
		}
		section Special Functions
		description Get the remark associated with the specified record
		private 0
		deprecated 0
	}
	&Arr{
		command dbgetr
		args dbptr convert_time record\# \#records [expression [format]]
		options &Tbl{
		}
		section Special Functions
		description Return a list containing the specified field or expression for the specified range of records
		private 0
		deprecated 0
	}
	&Arr{
		command dbgetv
		args dbptr table record field [field ...]
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Return a list containing the specified values of the specified fields
		private 0
		deprecated 0
	}
	&Arr{
		command dbgroup
		args db type field [field ..]
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Group the (sorted) input table by the specified fields
		private 0
		deprecated 0
	}
	&Arr{
		command dbinvalid
		args NONE
		options &Tbl{
		}
		section Special Functions
		description Return a db pointer with all elements dbINVALID
		private 0
		deprecated 0
	}
	&Arr{
		command dbjoin
		args db1 db2 [fields]
		options &Tbl{
		}
		section Forming Views
		description Join the specified tables
		private 0
		deprecated 0
	}
	&Arr{
		command dbjoin_tables
		args dbptr
		options &Tbl{
		}
		section Forming Views
		description Returns a list of tables for which some set of join keys can be inferred
		private 0
		deprecated 0
	}
	&Arr{
		command dblookup
		args dbptr database table field record
		options &Tbl{
		}
		section Opening a database
		description map from symbolic names to a database pointer
		private 0
		deprecated 0
	}
	&Arr{
		command dbmark
		args dbptr
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Set the specified record to all nulls
		private 0
		deprecated 0
	}
	&Arr{
		command dbmatches
		args db1 db2 hook [field ...]
		options &Tbl{
		}
		section Special Functions
		description Returns a list of records in the table specified by db2 which match (join with) the record specified by db1
		private 0
		deprecated 0
	}
	&Arr{
		command dbnextid
		args dbptr name
		options &Tbl{
		}
		section Special Functions
		description Get the next (integer) id for the specified  name
		private 0
		deprecated 0
	}
	&Arr{
		command dbnojoin
		args db1 db2 [field ...]
		options &Tbl{
		}
		section Forming Views
		description Returns all the records in db1 which do not join with table db2
		private 0
		deprecated 0
	}
	&Arr{
		command dbopen
		args path opentype
		options &Tbl{
		}
		section Opening a database
		description Open the specified database
		private 0
		deprecated 0
	}
	&Arr{
		command dbopen_table
		args path opentype
		options &Tbl{
		}
		section Opening a database
		description Open the specified database table
		private 0
		deprecated 0
	}
	&Arr{
		command dbopen_database
		args path opentype
		options &Tbl{
		}
		section Opening a database
		description Open the specified database. "-" means stdin; tables may be specified
		private 0
		deprecated 0
	}
	&Arr{
		command dbput
		args dbptr value
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Put the specified value into the specified location.
		private 0
		deprecated 0
	}
	&Arr{
		command dbputv
		args dbptr table record field value [field value ...]
		options &Tbl{
		}
		section Manipulating Fields and Records
		description Save the specified values into the specified fields.
		private 0
		deprecated 0
	}
	&Arr{
		command dbquery
		args dbptr code
		options &Tbl{
		}
		section Getting information about the Database
		description Query the database for various parameters
		private 0
		deprecated 0
	}
#	&Arr{
#		command dbsample
#		args dbptr widthvar nullvar
#		options &Tbl{
#		}
#		section Special Functions
#		description MISSING
#		private 0
#		deprecated 0
#	}
	&Arr{
		command dbsave_view
		args [-f] db name
		options &Tbl{
			-f  Allow overwriting files of the same name
		}
		section Forming Views
		description Save the specified view as a table in the same database with the specified name
		private 0
		deprecated 0
	}
	&Arr{
		command dbselect
		args [-b] [-F separator] [-t] filename db [field ...]
		options &Tbl{
			-b strip blanks from both ends of each field
			-t convert times to readable times
		}
		section Special Functions
		description Write selected fields from the input table to the specified filename
		private 0
		deprecated 0
	}
	&Arr{
		command dbsetr
		args db field first n expression
		options &Tbl{
		}
		section Special Functions
		description Set the specified field in the specified table to the value of the expression in records first to first+n
		private 0
		deprecated 0
	
	&Arr{
		command dbsort
		args [-r] [-u] db [fields ..]
		options &Tbl{
			-r reverse the sense of the sort
			-u eliminate all records in the output view with duplicate field values
		}
		section Forming Views
		description Sort the specified table by the specified fields or the primary  key if no fields are specified
		private 0
		deprecated 0
	}
	&Arr{
		command dbsubset
		args db expression
		options &Tbl{
		}
		section Forming Views
		description Returns a db pointer to the rows from the specified table which satisfy expression
		private 0
		deprecated 0
	}
	&Arr{
		command dbsever
		args db table
		options &Tbl{
		}
		section Forming Views
		description remove a table from a joined view
		private 0
		deprecated 0
	}
	&Arr{
		command dbtruncate
		args dbptr n
		options &Tbl{
		}
		section Opening a database
		description Truncate the specified table to n records
		private 0
		deprecated 0
	}
	&Arr{
		command dbtheta
		args dbptr1 dbptr2 [ expression ]
		options &Tbl{
		}
		section Forming Views
		description Theta join the specified tables
		private 0
		deprecated 0
	}
	&Arr{
		command dbunjoin
		args dbptr output
		options &Tbl{
		}
		section Forming Views
		description Unjoin the specified table, writing new tables into a new database named output
		private 0
		deprecated 0
	}
	&Arr{
		command dbprocess
		args db [command ...]
		options &Tbl{
		}
		section Forming Views
		description construct a view as series of standard operations
		private 0
		deprecated 0
	}
	&Arr{
		command elog_clear
		args NONE
		options &Tbl{
		}
		section Error Handling
		description Clear the elog message log
		private 0
		deprecated 0
	}
	&Arr{
		command elog_complain
		args msg
		options &Tbl{
		}
		section Error Handling
		description Write an error message to the elog message facility for immediate output
		private 0
		deprecated 0
	}
	&Arr{
		command elog_die
		args msg
		options &Tbl{
		}
		section Error Handling
		description Write a message to the elog message facility and die
		private 0
		deprecated 0
	}
	&Arr{
		command elog_flush
		args deliver first
		options &Tbl{
		}
		section Error Handling
		description Get rid of messages after  \#first  in  the error log, printing them if deliver is a boolean true
		private 0
		deprecated 0
	}
	&Arr{
		command elog_init
		args args
		options &Tbl{
		}
		section Error Handling
		description Initialize the elog routines with the command name
		private 0
		deprecated 0
	}
	&Arr{
		command elog_log
		args msg
		options &Tbl{
		}
		section Error Handling
		description Save a message on the elog message log
		private 0
		deprecated 0
	}
	&Arr{
		command elog_mark
		args NONE
		options &Tbl{
		}
		section Error Handling
		description returns the count of messages currently held in the error log
		private 0
		deprecated 0
	}
	&Arr{
		command elog_notify
		args msg
		options &Tbl{
		}
		section Error Handling
		description Write a message other than an error message to the elog facility
		private 0
		deprecated 0
	}
	&Arr{
		command epoch
		args yearday
		options &Tbl{
		}
		section Time conversion
		description Convert from yearday to epoch
		private 0
		deprecated 0
	}
	&Arr{
		command epoch2str
		args epoch fmt
		options &Tbl{
		}
		section Time conversion
		description Convert epoch time to a human readable format
		private 0
		deprecated 0
	}
	&Arr{
		command makedir
		args dir
		options &Tbl{
		}
		section Utility Functions
		description ensure that a directory exists
		private 0
		deprecated 0
	}
	&Arr{
		command peterson
		args {low|high} frequency rsptype
		options &Tbl{
		}
		section Instrument response routines
		description compute Peterson low/high noise model
		private 0
		deprecated 0
	}
	&Arr{
		command pfget
		args pf name
		options &Tbl{
		}
		section Parameter Files
		description Get the value for the specified name from the specified parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfgetarr
		args variable name
		options &Tbl{
		}
		section Parameter Files
		description Return the array corresponding to the specified name (eg, %pf\#name) in the variable
		private 0
		deprecated 0
	}
	&Arr{
		command pfgetlist
		args name
		options &Tbl{
		}
		section Parameter Files
		description Return the list corresponding to the specified name (eg, @pf\#name)
		private 0
		deprecated 0
	}
	&Arr{
		command pfput
		args pf name value
		options &Tbl{
		}
		section Parameter Files
		description Save the specified value into the parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfputarr
		args pf name [array]
		options &Tbl{
		}
		section Parameter Files
		description Save the specified array into the parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfputlist
		args pf name [list]
		options &Tbl{
		}
		section Parameter Files
		description Save the specified list into the parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfread
		args pf
		options &Tbl{
		}
		section Parameter Files
		description Force rereading the parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfwrite
		args pf filename
		options &Tbl{
		}
		section Parameter Files
		description Write the specified parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command read_response
		args filename
		options &Tbl{
		}
		section Instrument response routines
		description read a response object
		private 0
		deprecated 0
	}
	&Arr{
		command free_response
		args resphandle
		options &Tbl{
		}
		section Instrument response routines
		description free resources for a response object
		private 0
		deprecated 0
	}
	&Arr{
		command eval_response
		args resphandle freq_in_hz
		options &Tbl{
		}
		section Instrument response routines
		description evaluate a response object at a given frequency
		private 0
		deprecated 0
	}
	&Arr{
		command get_response
		args resphandle {nstages | stage_types | paz stageno}
		options &Tbl{
		}
		section Instrument response routines
		description get information about a response object
		private 0
		deprecated 0
	}
	&Arr{
		command put_response
		args resphandle stageno param_list
		options &Tbl{
		}
		section Instrument response routines
		description put values into a response object
		private 0
		deprecated 0
	}
	&Arr{
		command str2epoch
		args string
		options &Tbl{
		}
		section Time conversion
		description Convert human readable time to epoch time
		private 0
		deprecated 0
	}
	&Arr{
		command strdate
		args epoch
		options &Tbl{
		}
		section Time conversion
		description Convert epoch time to a human readable date string
		private 0
		deprecated 0
	}
	&Arr{
		command strtime
		args epoch
		options &Tbl{
		}
		section Time conversion
		description Convert epoch time to a human readable time string
		private 0
		deprecated 0
	}
	&Arr{
		command strydtime
		args epoch
		options &Tbl{
		}
		section Time conversion
		description Returns a readable time which includes the day of the year inside parentheses
		private 0
		deprecated 0
	}
	&Arr{
		command strtdelta
		args epoch
		options &Tbl{
		}
		section Time conversion
		description convert a time-difference into a string 
		private 0
		deprecated 0
	}
	&Arr{
		command writefile
		args filename stringname
		options &Tbl{
		}
		section Utility Functions
		description write contents of a string variable to a file
		private 0
		deprecated 0
	}
	&Arr{
		command yearday
		args epoch
		options &Tbl{
		}
		section Time conversion
		description Convert from yearday to epoch time
		private 0
		deprecated 0
	}
}
