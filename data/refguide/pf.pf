base_section C
Entries &Tbl{
	&Arr{
		command pffiles
		args char *name, int all
		return Tbl *
		options &Tbl{
		}
		section Parameter Files
		description Return a list of parameter files examined
		private 0
		deprecated 0
	}
	&Arr{
		command pfread
		args char *name, Pf **pf 
		return int
		options &Tbl{
		}
		section Parameter Files
		description read a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfupdate
		args char *name, Pf **pf
		return int
		options &Tbl{
		}
		section Parameter Files
		description update a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfin
		args FILE *file, Pf **pf
		return int
		options &Tbl{
		}
		section Parameter Files
		description read a parameter file from an open file
		private 0
		deprecated 0
	}
	&Arr{
		command pfcompile
		args char *s, Pf **pf
		return int
		options &Tbl{
		}
		section Parameter Files
		description read a parameter file from a string
		private 0
		deprecated 0
	}
	&Arr{
		command pfload
		args char *envname, char *dirname, char *filename, Pf **pf
		return int
		options &Tbl{
		}
		section Parameter Files
		description locate and load a single parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfwrite
		args char *filename, Pf *pf
		return int
		options &Tbl{
		}
		section Parameter Files
		description write a parameter file object to the specified file name
		private 0
		deprecated 0
	}
	&Arr{
		command pfout
		args FILE *file, Pf *pf
		return int
		options &Tbl{
		}
		section Parameter Files
		description write a parameter file object to the specified file
		private 0
		deprecated 0
	}
	&Arr{
		command pf2string
		args Pf *pf
		return char *
		options &Tbl{
		}
		section Parameter Files
		description convert a parameter space to a string
		private 0
		deprecated 0
	}
	&Arr{
		command pfget
		args Pf *pf, char *name, void **result
		return int
		options &Tbl{
		}
		section Parameter Files
		description get a value from a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfget_boolean
		args Pf *pf, char *name
		return int
		options &Tbl{
		}
		section Parameter Files
		description get a boolean value from a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfget_double
		args Pf *pf, char *name
		return double
		options &Tbl{
		}
		section Parameter Files
		description get a double-precision value from a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfget_int
		args Pf *pf, char *name
		return int
		options &Tbl{
		}
		section Parameter Files
		description get an integer value from a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfget_string
		args Pf *pf, char *name
		return char *
		options &Tbl{
		}
		section Parameter Files
		description get a string value from a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfget_tbl
		args Pf *pf, char *name
		return Tbl *
		options &Tbl{
		}
		section Parameter Files
		description get a list value from a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfmaxtbl
		args Pf *pf
		return int
		options &Tbl{
		}
		section Parameter Files
		description get the indices for a parameter-file object
		private 0
		deprecated 0
	}
	&Arr{
		command pfget_arr
		args Pf *pf, char *name
		return Arr *
		options &Tbl{
		}
		section Parameter Files
		description get an array value from a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pfkeys
		args Pf *pf
		return Tbl *
		options &Tbl{
		}
		section Parameter Files
		description get the parameter names from a parameter file
		private 0
		deprecated 0
	}
	&Arr{
		command pffree
		args Pf *pf
		return void
		options &Tbl{
		}
		section Parameter Files
		description free resources for a parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfnew
		args int type
		return Pf *
		options &Tbl{
		}
		section Parameter Files
		description start a new parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfput
		args Pf *pf, char *name, char *value, int type
		return void
		options &Tbl{
		}
		section Parameter Files
		description put a value into a parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfput_boolean
		args Pf *pf, char *name, int val
		return void
		options &Tbl{
		}
		section Parameter Files
		description put a boolean value into a parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfput_double
		args Pf *pf, char *name, double val
		return void
		options &Tbl{
		}
		section Parameter Files
		description put a double-precision value into a parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfput_int
		args Pf *pf, char *name, int val
		return void
		options &Tbl{
		}
		section Parameter Files
		description put an integer value into a parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfput_string
		args Pf *pf, char *name, char *value
		return void
		options &Tbl{
		}
		section Parameter Files
		description put a string value into a parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfput_arr
		args Pf *pf, char *name, Arr *value
		return void
		options &Tbl{
		}
		section Parameter Files
		description put an array value into a parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfput_tbl
		args Pf *pf, char *name, Tbl *value
		return void
		options &Tbl{
		}
		section Parameter Files
		description put a list value into a parameter space
		private 0
		deprecated 0
	}
	&Arr{
		command pfresolve
		args Pf *pf, char *name, int create, Pf **value_pf
		return int
		options &Tbl{
		}
		section Parameter Files
		description get a parameter from a parameter space using perl-style nested array indexing
		private 0
		deprecated 0
	}
	&Arr{
		command pfset
		args Pf *pf, char *name, char *value
		return int
		options &Tbl{
		}
		section Parameter Files
		description put a parameter into a parameter space using perl-style nested array indexing
		private 0
		deprecated 0
	}
	&Arr{
		command pfeval
		args Pf *pf, char *name, char **value
		return int
		options &Tbl{
		}
		section Parameter Files
		description get a parameter from a parameter space using perl-style nested array indexing
		private 0
		deprecated 0
	}
	&Arr{
		command pfconfig
		args char *name, void *value
		return int
		options &Tbl{
		}
		section Parameter Files
		description Override default settings such as the parameter-file &ask routine
		private 0
		deprecated 0
	}
}
