base_section C
Entries &Tbl{
	&Arr{
		command suffix2pkttype
		args char *suffix, short hdrcode, short bodycode
		return PacketType *
		options &Tbl{
		}
		section Packet and Waveform Handling
		description find packet type in list
		private 0
		deprecated 0
	}
	&Arr{
		command header2pkttype
		args char *suffix, short hdrcode, short bodycode
		return PacketType *
		options &Tbl{
		}
		section Packet and Waveform Handling
		description find packet type in list
		private 0
		deprecated 0
	}
	&Arr{
		command join_srcname
		args Srcname *parts, char *srcname
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description create orb srcname
		private 0
		deprecated 0
	}
	&Arr{
		command split_srcname
		args char *srcname, Srcname *parts
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description tear apart orb srcname
		private 0
		deprecated 0
	}
	&Arr{
		command unstuffPkt
		args char *srcname, double time, char *packet, int nbytes, Packet **pkt
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description separate orb packet into Packet structure
		private 0
		deprecated 0
	}
	&Arr{
		command stuffPkt
		args Packet *pkt, char *srcname, double *time, char **packet, int *nbytes, int *packets
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description create orb packet from Packet structure
		private 0
		deprecated 0
	}
	&Arr{
		command showPkt
		args int pktid, char *srcname, double pkttime, char *packet, int nbytes, FILE *file, int mode
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description display an orb packet for debugging purposes
		private 0
		deprecated 0
	}
	&Arr{
		command newPkt
		args void
		return Packet *
		options &Tbl{
		}
		section Packet and Waveform Handling
		description Create a new, empty, initialized Packet structure
		private 0
		deprecated 0
	}
	&Arr{
		command clrPkt
		args Packet *pkt
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description reset all parameters in a Packet structure
		private 0
		deprecated 0
	}
	&Arr{
		command freePkt
		args Packet *pkt
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description free memory associated with a Packet structure
		private 0
		deprecated 0
	}
	&Arr{
		command newPktChannel
		args void
		return PktChannel *
		options &Tbl{
		}
		section Packet and Waveform Handling
		description Create a new, empty, initialized PktChannel structure
		private 0
		deprecated 0
	}
	&Arr{
		command clrPktChannel
		args PktChannel *achan
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description reset all parameters in a PktChannel structure
		private 0
		deprecated 0
	}
	&Arr{
		command freePktChannel
		args PktChannel *achan
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description free memory associated with a PktChannel structure
		private 0
		deprecated 0
	}
	&Arr{
		command ascii2int
		args int *result, char *s, int n
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command buf2int
		args int *dst, char *src, int n
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command int2buf
		args char *dst, int value, int n
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command parse_S1000
		args char *buffer, S1000 *blk
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command parse_SDH
		args char *buffer, SDH *blk
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command parse_seed_data_header
		args Steim *conf
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command fill_S1000
		args S1000 *blk, char *buffer 
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command fill_SDH
		args SDH *blk, char *buffer
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command fill_seed_header
		args Steim *conf, int n0, int n1
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command samprate2seed
		args double samprate, int *factor, int *multiplier
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command seed2samprate
		args int factor, int multiplier, double *samprate
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description SEED reading/writing aid
		private 0
		deprecated 0
	}
	&Arr{
		command csteim
		args Steim *conf, int (*save_record)(), data, npts
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description Steim-compress seismic data
		private 0
		deprecated 0
	}
	&Arr{
		command usteim
		args Steim *conf, char *record, data, npts
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description Steim-uncompress seismic data
		private 0
		deprecated 0
	}
	&Arr{
		command freesteim
		args Steim *conf
		return void *
		options &Tbl{
		}
		section Packet and Waveform Handling
		description Free a Steim data structure
		private 0
		deprecated 0
	}
	&Arr{
		command uucsd
		args int *data, char **bufp, int bufcnt, int nsamp
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description uncompress data from modified Reftek dataloggers
		private 0
		deprecated 0
	}
	&Arr{
		command cucsd
		args int *data, int nsamp, char **buf, int *nbytes, int *bufsiz
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description compress data as in modified Reftek dataloggers
		private 0
		deprecated 0
	}
	&Arr{
		command psteim
		args FILE *file, char *record, int record_size
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description print out Steim compressed data in detail
		private 0
		deprecated 0
	}
	&Arr{
		command mksignal
		args char *type, float *data, double time, int nsamp, double samprate, double t0, double freq, double slew, double amp
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description generate a signal of a specified type
		private 0
		deprecated 0
	}
	&Arr{
		command imksignal
		args char *type, int *data, double time, int nsamp, double samprate, double t0, double freq, double slew, double amp
		return void
		options &Tbl{
		}
		section Packet and Waveform Handling
		description generate a signal of a specified type
		private 0
		deprecated 0
	}
	&Arr{
		command initsteim
		args Wfdisc *wfdisc
		return Steim *
		options &Tbl{
		}
		section Packet and Waveform Handling
		description allocate and initialize a Steim structure
		private 0
		deprecated 0
	}
	&Arr{
		command get_seed_data_record
		args Steim *conf
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description attempt to read a complete SEED record from miniseed volume
		private 0
		deprecated 0
	}
	&Arr{
		command gse_checksum
		args int *signal, int nsamp
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description compute gse checksum for AutoDRM
		private 0
		deprecated 0
	}
	&Arr{
		command ccanada
		args int *data, int nsamp, char **compressedp, int *nbytes, int *compressedsz
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description data compression using the Canadian Compression Scheme
		private 0
		deprecated 0
	}
	&Arr{
		command ucanada
		args char *compressed, int nbytes, int **datap, int *nsamp, int *datasz
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description data uncompression using the Canadian Compression Scheme
		private 0
		deprecated 0
	}
	&Arr{
		command cm6
		args int *data, int nsamp, char **encoded, int *nbytes, int *encodedsz
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description compress GSE AutoDRM CM6 format
		private 0
		deprecated 0
	}
	&Arr{
		command um6
		args char *encoded, int nbytes, int **data, int *nsamp, int *datasz
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description uncompress GSE AutoDRM CM6 format
		private 0
		deprecated 0
	}
	&Arr{
		command chantracebuf_new
		args double tstart, double tend, double latency, int apply_calib
		return Chantracebuf *
		options &Tbl{
		}
		section Packet and Waveform Handling
		description create a new channel trace buffer object
		private 0
		deprecated 0
	}
	&Arr{
		command chantracebuf_free
		args Chantracebuf *cp
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description free a channel trace buffer object
		private 0
		deprecated 0
	}
	&Arr{
		command chantracebuf_add
		args Chantracebuf *cp, PktChannel *pktchan
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description add new data packets to trace-buffer object
		private 0
		deprecated 0
	}
	&Arr{
		command chantracebuf_filter
		args void **fil, int *type, Chantracebuf *icp, Chantracebuf **ocp, char *filspec, int filinit
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description apply a filter to a trace-buffer object
		private 0
		deprecated 0
	}
	&Arr{
		command chantraceproc_new
		args double latency
		return Chantraceproc
		options &Tbl{
		}
		section Packet and Waveform Handling
		description create a new channel trace process object
		private 0
		deprecated 0
	}
	&Arr{
		command chantraceproc_free
		args Chantraceproc *cp
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description free a channel trace process object
		private 0
		deprecated 0
	}
	&Arr{
		command chantraceproc_addchan
		args Chantraceproc *cp, char *netstachan, int (*callback)(), void *private, double tstart, double tend, double latency, int apply_calib
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description specify a channel to be processed by a process object
		private 0
		deprecated 0
	}
	&Arr{
		command chantraceproc_process
		args Chantraceproc *cp, int orb
		return int
		options &Tbl{
		}
		section Packet and Waveform Handling
		description process data with a channel trace process object
		private 0
		deprecated 0
	}
}
