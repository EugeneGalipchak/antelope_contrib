'\" te	
.TH REFGUIDE 5 "$Date$"
.SH NAME
reference guide \- overview of parameter files for reference guide
.SH SYNOPSIS
.SH DESCRIPTION
The Antelope reference guide is currently built from the information 
contained in a set of parameter-files. Each command in the reference 
guide has an associative array describing the command. For example 
for the C version of the dbopen command, the entry looks like this: 

.nf
Entries &Tbl{
	&Arr{
		command dbopen
		args char *path, char *permissions, Dbptr *db
		return int
		options &Tbl{
		}
		section Database Operations
		description open the specified database
		private 0
		deprecated 0
	}
}
.fi

The command is listed along with its arguments, return value, a short
description, a table of options, a section name, and the two boolean values
private and deprecated. These associative array 'atoms' for each command are
listed in a table called Entries in each parameter-file contributing to the
reference guide. 

The section parameter is actually a colon-separated hierarchical list
of sections. If the parameter base_section is present in the parameter
file, the value of base_section is prepended onto the colon-separated
list of the 'section' parameter to completely describe the place of the
entries in the reference guide. If a third or later level begins with "-", 
the subsection is headed by a blank line rather than a printed subsection 
name. This supports clustering of entries without too many subsection 
titles. Note that the subsection clusters must still have names in the 
colon-separated section list, even if those names do not get printed.

Entries with 'private' set to true are omitted from the publically-released 
version of the reference guide. Entries with 'deprecated' are either 
marked as such or omitted from the reference guide depending on options set
in the reference-guide-building scripts. 

Several special values are allowed. the args value may be specified as NONE.
The return value may also be specified as NONE. A return value of EMPTY 
indicates an incomplete entry. A value for args of DUAL indicates a 
command or function that takes both left- and right-side arguments, e.g. 
an operator. A value for args of NOTAPPLICABLE indicates that it is not
appropriate to apply bracketed arguments to this command (used in 
the expression calculator section to omit braces).

For each section, a header may optionally be specified for that section as a 
literal embedded in an array called Headers. For example, the header 
for the C section may be specified as 

.nf

Headers &Arr{
C &Literal{
	#include "db.h"
	typedef struct Dbptr
	{
		int	database,
			table,
			field,
			record;
	} Dbptr;
}
}

.SH OPTIONS
.SH FILES
.SH ENVIRONMENT
.SH PARAMETER FILE
.SH EXAMPLE
.ft CW
.RS .2i
.RE
.ft R
.SH RETURN VALUES
.SH LIBRARY
.SH DIAGNOSTICS
.SH "SEE ALSO"
.nf
make_refguide(1)
.fi
.SH "BUGS AND CAVEATS"
while the section hierarchy is infinitely recursive, whether the full 
heirarchy is implemented in the output reference guide depends on the 
implementation program.
.SH AUTHOR
Kent Lindquist kent@giseis.alaska.edu
.\" $Id$
