base_section C Interface
Entries &Tbl{
	&Arr{
		command dbadd
		args Dbptr db, char *record
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description add a record to a table
		private 0
		deprecated 0
	}
	&Arr{
		command dbaddnull
		args Dbptr db
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description add a null record to a table
		private 0
		deprecated 0
	}
	&Arr{
		command dbcompile
		args Dbptr db, char *s
		return int
		options &Tbl{
		}
		section Database Operations:Managing Ancillary Information
		description add attributes and/or relations to a schema
		private 0
		deprecated 0
	}
	&Arr{
		command dbcopy
		args Dbptr dbin, Dbptr dbout, Arr *expressions
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description copy records from one table to another
		private 0
		deprecated 0
	}
	&Arr{
		command dbdelete
		args Dbptr db
		return int
		options &Tbl{
		}
		section Database Operations:Removing and deleting rows
		description delete rows from database tables
		private 0
		deprecated 0
	}
	&Arr{
		command dbmark
		args Dbptr db
		return int
		options &Tbl{
		}
		section Database Operations:Removing and deleting rows
		description mark rows for deletion (set all fields to NULL)
		private 0
		deprecated 0
	}
	&Arr{
		command dbcrunch
		args Dbptr db
		return int
		options &Tbl{
		}
		section Database Operations:Removing and deleting rows
		description remove null rows from database
		private 0
		deprecated 0
	}
	&Arr{
		command dbdestroy
		args Dbptr db
		return int
		options &Tbl{
		}
		section Database Operations:Removing and deleting rows
		description completely eliminate every table in a database
		private 0
		deprecated 0
	}
	&Arr{
		command dbtruncate
		args Dbptr db, int nrecords
		return int
		options &Tbl{
		}
		section Database Operations:Removing and deleting rows
		description truncate a database table to specified number of records
		private 0
		deprecated 0
	}
	&Arr{
		command dbex_compile
		args Dbptr db, char *s, Expression **expression, int type
		return int
		options &Tbl{
		}
		section Database Operations:Deriving information
		description compile a database expression
		private 0
		deprecated 0
	}
	&Arr{
		command dbex_eval
		args Dbptr db, Expression *expression, int setflag, Dbvalue *result
		return int
		options &Tbl{
		}
		section Database Operations:Deriving information
		description Evaluate a database expression 
		private 0
		deprecated 0
	}
	&Arr{
		command dbex_free
		args Expression *expression
		return int
		options &Tbl{
		}
		section Database Operations:Deriving information
		description Free a database expression
		private 0
		deprecated 0
	}
	&Arr{
		command dbex_evalstr
		args Dbptr db, char *s, int type, void *value
		return int
		options &Tbl{
		}
		section Database Operations:Deriving information
		description Compile and evaluate a database expression
		private 0
		deprecated 0
	}
	&Arr{
		command dbextfile
		args Dbptr db, char *tablename, char *filename
		return int
		options &Tbl{
		}
		section Database Operations:Deriving information
		description compose a filename from a database record
		private 0
		deprecated 0
	}
	&Arr{
		command dbfilename
		args Dbptr db, char *filename
		return int
		options &Tbl{
		}
		section Database Operations:Deriving information
		description compose a filename from a database record
		private 0
		deprecated 0
	}
	&Arr{
		command dbfree
		args Dbptr db
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description free space taken by a database view
		private 0
		deprecated 0
	}
	&Arr{
		command dbclose
		args Dbptr db
		return int
		options &Tbl{
		}
		section Database Operations:Opening a database
		description Close a database
		private 0
		deprecated 0
	}
	&Arr{
		command dbget
		args Dbptr db, char *s
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description get ascii tables, records, or fields from database
		private 0
		deprecated 0
	}
	&Arr{
		command dbput
		args Dbptr db, char *s
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description put ascii tables, records, or fields into database
		private 0
		deprecated 0
	}
	&Arr{
		command dbget_calib
		args char *sta, char *chan, double time, char *database, double *calib, double *calper, char *segtype
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description lookup calib, calper, and segtype from a dynamic database
		private 0
		deprecated 0
	}
	&Arr{
		command dbget_range
		args Dbptr db, int *s, int *e
		return void
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description extract range of record numbers from database pointer
		private 0
		deprecated 0
	}
	&Arr{
		command dbgetv
		args Dbptr db, char *table_name, char *field_name, &value1, ..., 0
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description read values from fields in a database table
		private 0
		deprecated 0
	}
	&Arr{
		command dbputv
		args Dbptr db, char *table_name, char *field_name, value1, ..., 0
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description write values to fields in a database table
		private 0
		deprecated 0
	}
	&Arr{
		command dbaddv
		args Dbptr db, char *table_name, char *field_name, value1, ..., 0
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description write values to a new row in a database table
		private 0
		deprecated 0
	}
	&Arr{
		command dbgroup
		args Dbptr db, Tbl *groupfields, char *name, int type
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Forming views
		description group a sorted table
		private 0
		deprecated 0
	}
	&Arr{
		command dbmatch_range
		args Dbptr dbk, Dbptr dbt, Tbl **kpatternp, Tbl **tpatternp, void **hookp, Dbindex **index, int *ns, int *ne
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description returns database indices matching join criteria
		private 0
		deprecated 0
	}
	&Arr{
		command dbget_index
		args Dbptr db, Tbl *pattern, Dbindex **index
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description Retrieve a database index
		private 0
		deprecated 0
	}
	&Arr{
		command dbupdate_index
		args Dbindex *dbindex
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description Force your copy of database indices to be updated
		private 0
		deprecated 0
	}
	&Arr{
		command dbrecord
		args Dbindex *dbindex, int j
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description Convert an index record number into a table record number
		private 0
		deprecated 0
	}
	&Arr{
		command dbinvalid
		args NONE
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Managing Ancillary Information
		description returns an invalid database pointer
		private 0
		deprecated 0
	}
	&Arr{
		command dbjoin
		args Dbptr db1, Dbptr db2, Tbl **pattern1, Tbl **pattern2, int outer, Tbl **nojoin, char *name
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Forming views
		description create a natural join of two database tables
		private 0
		deprecated 0
	}
	&Arr{
		command dbtheta
		args Dbptr db1, Dbptr db2, char *ex_str, int outer, char *name
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Forming views
		description Create a theta-join of two database tables
		private 0
		deprecated 0
	}
	&Arr{
		command dblist2subset
		args Dbptr db, Tbl *list
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description convert Tbl list of records to subset
		private 0
		deprecated 0
	}
	&Arr{
		command dblookup
		args Dbptr db, char *database_name, char *table_name, char *field_name, char *record_name 
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Opening a database
		description lookup indexes from ascii names
		private 0
		deprecated 0
	}
	&Arr{
		command dbmatches
		args Dbptr dbk, Dbptr dbt, Tbl **kpatternp, Tbl **tpatternp, Hook **hookp, Tbl **tblp
		return int
		options &Tbl{
		}
		section Database Operations:Forming views
		description find matching records in second table
		private 0
		deprecated 0
	}
	&Arr{
		command dbnextid
		args Dbptr db, char *name
		return int
		options &Tbl{
		}
		section Database Operations:Managing Ancillary Information
		description generate a unique id from the lastid table
		private 0
		deprecated 0
	}
	&Arr{
		command dbnojoin
		args Dbptr db1, Dbptr db2, Tbl **keys1p, Tbl **keys2p, char *view_name
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Forming views
		description return records of db1 which do not join with db2
		private 0
		deprecated 0
	}
	&Arr{
		command dbopen
		args char *path, char *permissions, Dbptr *db
		return int
		options &Tbl{
		}
		section Database Operations:Opening a database
		description open the specified database
		private 0
		deprecated 0
	}
	&Arr{
		command dbopen_database
		args char *path, char *permissions, Dbptr *db
		return int
		options &Tbl{
		}
		section Database Operations:Opening a database
		description open the specified database or table pathname
		private 0
		deprecated 0
	}
	&Arr{
		command dbopen_table
		args char *path, char *permissions, Dbptr *db
		return int
		options &Tbl{
		}
		section Database Operations:Opening a database
		description open the specified database, table pathname, or table
		private 0
		deprecated 0
	}
	&Arr{
		command dbprocess
		args Dbptr db, Tbl *list, Dbptr (*unknown)()
		return int
		options &Tbl{
		}
		section Database Operations:Forming views
		description construct a view as a series of standard operations
		private 0
		deprecated 0
	}
	&Arr{
		command dbquery
		args Dbptr db, int code, Dbvalue *value
		return int
		options &Tbl{
		}
		section Database Operations:Managing Ancillary Information
		description get ancillary information about a database
		private 0
		deprecated 0
	}
	&Arr{
		command dbadd_remark
		args Dbptr db, char *remark
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description add a remark to CSS tables
		private 0
		deprecated 0
	}
	&Arr{
		command dbget_remark
		args Dbptr db, char **remark
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description get a remark from CSS tables
		private 0
		deprecated 0
	}
	&Arr{
		command dbwrite_view
		args Dbptr db, FILE *file
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description write a database view to a file
		private 0
		deprecated 0
	}
	&Arr{
		command dbread_view
		args FILE *file, Dbptr *dbr, char *name
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description read a database view from a file
		private 0
		deprecated 0
	}
	&Arr{
		command dbsave_view
		args Dbptr db
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description save a database view
		private 0
		deprecated 0
	}
	&Arr{
		command dbselect
		args Dbptr db, Tbl *expressions, FILE *file
		return int
		options &Tbl{
		}
		section Database Operations:Adding and retrieving values
		description print selected values from a view
		private 0
		deprecated 0
	}
	&Arr{
		command dbset
		args Dbptr db, int code, Dbvalue value
		return int
		options &Tbl{
		}
		section Database Operations:Managing Ancillary Information
		description set certain parameters in the database library
		private 0
		deprecated 0
	}
	&Arr{
		command dbsever
		args Dbptr db, char *tablename, char *name
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Forming views
		description remove a table from a joined view
		private 0
		deprecated 0
	}
	&Arr{
		command dbsort
		args Dbptr db, Tbl *tbl, int flag, char *name
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Forming views
		description create a sorted view
		private 0
		deprecated 0
	}
	&Arr{
		command dbsubset
		args Dbptr db, char *s, char *name
		return Dbptr
		options &Tbl{
		}
		section Database Operations:Forming views
		description create a subset view
		private 0
		deprecated 0
	}
	&Arr{
		command dbtables
		args Dbptr db, char *fieldname
		return Tbl *
		options &Tbl{
		}
		section Database Operations:Managing Ancillary Information
		description return a list of tables which use a field
		private 0
		deprecated 0
	}
	&Arr{
		command dbunjoin
		args Dbptr db, char *database_name, int rewrite
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description create new tables from a joined table
		private 0
		deprecated 0
	}
	&Arr{
		command dbuntangle
		args Dbptr db, Arr **table_records
		return int
		options &Tbl{
		}
		section Database Operations:Manipulating and Saving Views
		description return lists of constituent records of views
		private 0
		deprecated 0
	}
}
